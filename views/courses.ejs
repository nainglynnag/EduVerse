<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>All Courses - EduVerse</title>
    <script src="https://cdn.tailwindcss.com"></script>
    <script>
        tailwind.config = {
            theme: {
                extend: {
                    colors: {
                        "blue-950": "#1e3a8a",
                    },
                },
            },
        };
    </script>
</head>
<body class="bg-gradient-to-br from-blue-50 to-indigo-100 min-h-screen">
    <!-- Header -->
    <header class="bg-white/90 backdrop-blur-sm shadow-sm border-b border-gray-200 sticky top-0 z-20">
        <div class="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8">
            <div class="flex items-center justify-between h-16">
                <div class="flex items-center space-x-3">
                    <div class="bg-gradient-to-r from-purple-600 to-pink-600 p-2 rounded-lg">
                        <svg class="w-8 h-8 text-white" fill="currentColor" viewBox="0 0 20 20">
                            <path d="M10.394 2.08a1 1 0 00-.788 0l-7 3a1 1 0 000 1.84L5.25 8.051a.999.999 0 01.356-.257l4-1.714a1 1 0 11.788 1.838L7.667 9.088l1.94.831a1 1 0 00.787 0l7-3a1 1 0 000-1.838l-7-3zM3.31 9.397L5 10.12v4.102a8.969 8.969 0 00-1.05-.174 1 1 0 01-.89-.89 11.115 11.115 0 01.25-3.762zM9.3 16.573A9.026 9.026 0 007 14.935v-3.957l1.818.78a3 3 0 002.364 0l5.508-2.361a11.026 11.026 0 01.25 3.762 1 1 0 01-.89.89 8.968 8.968 0 00-5.35 2.524 1 1 0 01-1.4 0zM6 18a1 1 0 001-1v-2.065a8.935 8.935 0 00-2-.712V17a1 1 0 001 1z"/>
                        </svg>
                    </div>
                    <span class="text-xl font-bold bg-gradient-to-r from-purple-600 to-pink-600 bg-clip-text text-transparent">EduVerse</span>
                </div>
                
                <nav class="hidden md:flex space-x-8">
                    <a href="/" class="text-gray-700 hover:text-purple-600 transition-colors">Home</a>
                    <a href="/courses" class="text-purple-600 font-medium">Courses</a>
                    <a href="/instructor" class="text-gray-700 hover:text-purple-600 transition-colors">Instructor</a>
                    <a href="/admin" class="text-gray-700 hover:text-purple-600 transition-colors">Admin</a>
                </nav>

                <div class="flex items-center space-x-4">
                    <button onclick="window.location.href='/instructor'" class="bg-gradient-to-r from-purple-600 to-pink-600 text-white px-4 py-2 rounded-lg hover:from-purple-700 hover:to-pink-700 transition-all">
                        Become Instructor
                    </button>
                </div>
            </div>
        </div>
    </header>

    <!-- Main Content -->
    <main class="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-8">
        <!-- Page Header -->
        <div class="text-center mb-12">
            <h1 class="text-4xl font-bold text-gray-800 mb-4">
                <span class="bg-gradient-to-r from-purple-600 to-pink-600 bg-clip-text text-transparent">
                    Explore Our Courses
                </span>
            </h1>
            <p class="text-lg text-gray-600 max-w-2xl mx-auto">
                Discover a world of knowledge with our comprehensive collection of courses designed by expert instructors
            </p>
        </div>

        <!-- Filters and Search -->
        <div class="bg-white rounded-2xl p-6 shadow-lg mb-8">
            <div class="flex flex-col md:flex-row gap-4 items-center">
                <div class="flex-1">
                    <input 
                        type="text" 
                        id="searchInput"
                        placeholder="Search courses..." 
                        class="w-full px-4 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-purple-500 focus:border-transparent"
                    >
                </div>
                <div class="flex gap-4">
                    <select id="categoryFilter" class="px-4 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-purple-500 focus:border-transparent">
                        <option value="">All Categories</option>
                        <option value="programming">Programming</option>
                        <option value="design">Design</option>
                        <option value="business">Business</option>
                        <option value="marketing">Marketing</option>
                        <option value="data-science">Data Science</option>
                    </select>
                    <select id="difficultyFilter" class="px-4 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-purple-500 focus:border-transparent">
                        <option value="">All Levels</option>
                        <option value="beginner">Beginner</option>
                        <option value="intermediate">Intermediate</option>
                        <option value="advanced">Advanced</option>
                    </select>
                </div>
            </div>
        </div>

        <!-- Loading State -->
        <div id="loadingState" class="text-center py-12">
            <div class="bg-white rounded-2xl p-8 shadow-lg inline-block">
                <svg class="w-8 h-8 text-gray-400 mx-auto mb-4 animate-spin" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M4 4v5h.582m15.356 2A8.001 8.001 0 004.582 9m0 0H9m11 11v-5h-.581m0 0a8.003 8.003 0 01-15.357-2m15.357 2H15"></path>
                </svg>
                <p class="text-gray-600">Loading courses...</p>
            </div>
        </div>

        <!-- Courses Grid -->
        <div id="coursesGrid" class="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6 hidden">
            <!-- Course cards will be populated by JavaScript -->
        </div>

        <!-- Empty State -->
        <div id="emptyState" class="text-center py-12 hidden">
            <div class="bg-white rounded-2xl p-8 shadow-lg inline-block">
                <svg class="w-16 h-16 text-gray-400 mx-auto mb-4" fill="currentColor" viewBox="0 0 20 20">
                    <path fill-rule="evenodd" d="M6 2a1 1 0 00-1 1v1H4a2 2 0 00-2 2v10a2 2 0 002 2h12a2 2 0 002-2V6a2 2 0 00-2-2h-1V3a1 1 0 10-2 0v1H7V3a1 1 0 00-1-1zm0 5a1 1 0 000 2h8a1 1 0 100-2H6z" clip-rule="evenodd"/>
                </svg>
                <h3 class="text-lg font-semibold text-gray-800 mb-2">No Courses Found</h3>
                <p class="text-gray-600 mb-4">No courses match your current filters. Try adjusting your search criteria.</p>
                <button onclick="loadAllCourses()" class="bg-purple-600 text-white px-6 py-2 rounded-lg hover:bg-purple-700 transition-all">
                    Show All Courses
                </button>
            </div>
        </div>

        <!-- Error State -->
        <div id="errorState" class="text-center py-12 hidden">
            <div class="bg-white rounded-2xl p-8 shadow-lg inline-block">
                <svg class="w-16 h-16 text-red-400 mx-auto mb-4" fill="currentColor" viewBox="0 0 20 20">
                    <path fill-rule="evenodd" d="M18 10a8 8 0 11-16 0 8 8 0 0116 0zm-7 4a1 1 0 11-2 0 1 1 0 012 0zm-1-9a1 1 0 00-1 1v4a1 1 0 102 0V6a1 1 0 00-1-1z" clip-rule="evenodd"/>
                </svg>
                <h3 class="text-lg font-semibold text-gray-800 mb-2">Error Loading Courses</h3>
                <p class="text-gray-600 mb-4">There was an error loading the courses. Please try again.</p>
                <button onclick="loadAllCourses()" class="bg-purple-600 text-white px-6 py-2 rounded-lg hover:bg-purple-700 transition-all">
                    Try Again
                </button>
            </div>
        </div>
    </main>

    <!-- Course Detail Modal -->
    <div id="courseModal" class="fixed inset-0 bg-black bg-opacity-50 hidden z-50 flex items-center justify-center p-4">
        <div class="bg-white rounded-2xl max-w-4xl w-full max-h-[90vh] overflow-y-auto">
            <div class="p-6">
                <div class="flex items-center justify-between mb-6">
                    <h2 id="modalTitle" class="text-2xl font-bold text-gray-800">Course Title</h2>
                    <button onclick="closeModal()" class="text-gray-500 hover:text-gray-700">
                        <svg class="w-6 h-6" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M6 18L18 6M6 6l12 12"></path>
                        </svg>
                    </button>
                </div>
                
                <div class="grid grid-cols-1 lg:grid-cols-3 gap-6">
                    <div class="lg:col-span-2">
                        <div class="space-y-6">
                            <div>
                                <h3 class="font-semibold text-gray-800 mb-2">Description</h3>
                                <p id="modalDescription" class="text-gray-600"></p>
                            </div>
                            
                            <div>
                                <h3 class="font-semibold text-gray-800 mb-2">Instructor</h3>
                                <p id="modalInstructor" class="text-gray-600"></p>
                            </div>
                            
                            <div>
                                <h3 class="font-semibold text-gray-800 mb-2">Category</h3>
                                <p id="modalCategory" class="text-gray-600"></p>
                            </div>
                            
                            <div>
                                <h3 class="font-semibold text-gray-800 mb-2">Difficulty Level</h3>
                                <p id="modalDifficulty" class="text-gray-600"></p>
                            </div>
                        </div>
                    </div>
                    
                    <div>
                        <div class="bg-gray-50 rounded-lg p-4 mb-4">
                            <h3 class="font-semibold text-gray-800 mb-4">Course Details</h3>
                            <div class="space-y-3">
                                <div class="flex justify-between">
                                    <span class="text-gray-600">Price</span>
                                    <span id="modalPrice" class="font-medium">$0</span>
                                </div>
                                <div class="flex justify-between">
                                    <span class="text-gray-600">Status</span>
                                    <span id="modalStatus" class="font-medium">Draft</span>
                                </div>
                                <div class="flex justify-between">
                                    <span class="text-gray-600">Created</span>
                                    <span id="modalCreated" class="font-medium">-</span>
                                </div>
                            </div>
                        </div>
                        
                        <div class="space-y-3">
                            <button onclick="enrollCourse()" class="w-full bg-gradient-to-r from-purple-600 to-pink-600 text-white px-4 py-2 rounded-lg hover:from-purple-700 hover:to-pink-700 transition-all">
                                Enroll Now
                            </button>
                            <button onclick="contactInstructor()" class="w-full border border-gray-300 text-gray-700 px-4 py-2 rounded-lg hover:bg-gray-50 transition-colors">
                                Contact Instructor
                            </button>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <script>
        let allCourses = [];
        let filteredCourses = [];

        // Load all courses on page load
        document.addEventListener('DOMContentLoaded', function() {
            loadAllCourses();
            setupEventListeners();
        });

        function loadAllCourses() {
            // Courses are now loaded server-side
            const coursesData = JSON.parse('<%- JSON.stringify(courses || []) %>');
            allCourses = coursesData;
            filteredCourses = [...allCourses];
            displayCourses(filteredCourses);
        }

        function displayCourses(courses) {
            const coursesGrid = document.getElementById('coursesGrid');
            const loadingState = document.getElementById('loadingState');
            const emptyState = document.getElementById('emptyState');
            const errorState = document.getElementById('errorState');

            // Hide all states
            loadingState.classList.add('hidden');
            errorState.classList.add('hidden');
            coursesGrid.classList.add('hidden');
            emptyState.classList.add('hidden');

            if (courses.length === 0) {
                emptyState.classList.remove('hidden');
                return;
            }

            coursesGrid.classList.remove('hidden');
            
            coursesGrid.innerHTML = courses.map(course => `
                <div class="bg-white rounded-2xl shadow-lg hover:shadow-xl transition-shadow overflow-hidden cursor-pointer" onclick="openCourseModal(${course.id})">
                    <div class="bg-gradient-to-r from-purple-500 to-pink-500 h-32 flex items-center justify-center">
                        <svg class="w-12 h-12 text-white" fill="currentColor" viewBox="0 0 20 20">
                            <path fill-rule="evenodd" d="M6 2a1 1 0 00-1 1v1H4a2 2 0 00-2 2v10a2 2 0 002 2h12a2 2 0 002-2V6a2 2 0 00-2-2h-1V3a1 1 0 10-2 0v1H7V3a1 1 0 00-1-1zm0 5a1 1 0 000 2h8a1 1 0 100-2H6z" clip-rule="evenodd"/>
                        </svg>
                    </div>
                    <div class="p-6">
                        <div class="flex items-center justify-between mb-2">
                            <h3 class="font-bold text-gray-800 text-lg">${course.title}</h3>
                            <span class="px-2 py-1 text-xs rounded-full ${
                                course.status === "published" 
                                    ? "bg-green-100 text-green-800" 
                                    : "bg-yellow-100 text-yellow-800"
                            }">${course.status}</span>
                        </div>
                        <p class="text-gray-600 text-sm mb-4 line-clamp-2">${course.description || 'No description available'}</p>
                        <div class="flex items-center justify-between text-sm text-gray-600 mb-4">
                            <span>${course.category_name || 'Uncategorized'}</span>
                            <span class="font-semibold text-purple-600">$${course.price || 0}</span>
                        </div>
                        <div class="flex items-center justify-between">
                            <span class="text-xs text-gray-500">${course.difficulty_name || 'Not specified'}</span>
                            <span class="text-xs text-gray-500">${course.instructor_name || 'Unknown Instructor'}</span>
                        </div>
                    </div>
                </div>
            `).join('');
        }

        function setupEventListeners() {
            // Search functionality
            document.getElementById('searchInput').addEventListener('input', filterCourses);
            
            // Category filter
            document.getElementById('categoryFilter').addEventListener('change', filterCourses);
            
            // Difficulty filter
            document.getElementById('difficultyFilter').addEventListener('change', filterCourses);
        }

        function filterCourses() {
            const searchTerm = document.getElementById('searchInput').value.toLowerCase();
            const categoryFilter = document.getElementById('categoryFilter').value;
            const difficultyFilter = document.getElementById('difficultyFilter').value;

            filteredCourses = allCourses.filter(course => {
                const matchesSearch = course.title.toLowerCase().includes(searchTerm) || 
                                    (course.description && course.description.toLowerCase().includes(searchTerm));
                const matchesCategory = !categoryFilter || course.category_name === categoryFilter;
                const matchesDifficulty = !difficultyFilter || course.difficulty_name === difficultyFilter;

                return matchesSearch && matchesCategory && matchesDifficulty;
            });

            displayCourses(filteredCourses);
        }

        function showLoading() {
            document.getElementById('loadingState').classList.remove('hidden');
            document.getElementById('coursesGrid').classList.add('hidden');
            document.getElementById('emptyState').classList.add('hidden');
            document.getElementById('errorState').classList.add('hidden');
        }

        function showError() {
            document.getElementById('loadingState').classList.add('hidden');
            document.getElementById('coursesGrid').classList.add('hidden');
            document.getElementById('emptyState').classList.add('hidden');
            document.getElementById('errorState').classList.remove('hidden');
        }

        function openCourseModal(courseId) {
            // Find course data from the already loaded courses
            const course = allCourses.find(c => c.id === courseId);
            
            if (course) {
                // Populate modal with course data
                document.getElementById('modalTitle').textContent = course.title;
                document.getElementById('modalDescription').textContent = course.description || 'No description available';
                document.getElementById('modalInstructor').textContent = course.instructor_name || 'Unknown Instructor';
                document.getElementById('modalCategory').textContent = course.category_name || 'Uncategorized';
                document.getElementById('modalDifficulty').textContent = course.difficulty_name || 'Not specified';
                document.getElementById('modalPrice').textContent = `$${course.price || 0}`;
                document.getElementById('modalStatus').textContent = course.status || 'Draft';
                document.getElementById('modalCreated').textContent = course.created_at ? new Date(course.created_at).toLocaleDateString() : '-';
                
                // Show modal
                document.getElementById('courseModal').classList.remove('hidden');
                document.body.style.overflow = 'hidden';
            } else {
                alert('Course not found');
            }
        }

        function closeModal() {
            document.getElementById('courseModal').classList.add('hidden');
            document.body.style.overflow = 'auto';
        }

        function enrollCourse() {
            alert('Enrollment functionality will be implemented soon!');
        }

        function contactInstructor() {
            alert('Contact instructor functionality will be implemented soon!');
        }

        // Close modal when clicking outside
        document.getElementById('courseModal').addEventListener('click', function(e) {
            if (e.target === this) {
                closeModal();
            }
        });
    </script>
</body>
</html>
