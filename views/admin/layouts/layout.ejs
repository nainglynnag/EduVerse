<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>EduVerse</title>
    <link rel="stylesheet" href="/css/main.css" />
    <script>
      tailwind.config = {
        theme: {
          extend: {
            colors: {
              "blue-950": "#1e3a8a",
            },
          },
        },
      };
    </script>

    <% if (typeof head !== 'undefined') { %> <%- head %> <% } %>
  </head>
  <body class="bg-gradient-to-br from-blue-50 to-indigo-100 min-h-screen">
    <!-- Sidebar -->
    <div
      id="sidebar"
      class="fixed left-0 top-0 h-full w-64 bg-white shadow-xl z-40 transform transition-transform duration-300"
    >
      <!-- Logo -->
      <div class="p-6 border-b border-gray-200">
        <a href="/admin/dashboard" class="flex items-center space-x-3">
          <div
            class="bg-gradient-to-r from-purple-600 to-pink-600 p-2 rounded-lg"
          >
            <svg
              class="w-8 h-8 text-white"
              fill="currentColor"
              viewBox="0 0 20 20"
            >
              <path
                d="M10.394 2.08a1 1 0 00-.788 0l-7 3a1 1 0 000 1.84L5.25 8.051a.999.999 0 01.356-.257l4-1.714a1 1 0 11.788 1.838L7.667 9.088l1.94.831a1 1 0 00.787 0l7-3a1 1 0 000-1.838l-7-3zM3.31 9.397L5 10.12v4.102a8.969 8.969 0 00-1.05-.174 1 1 0 01-.89-.89 11.115 11.115 0 01.25-3.762zM9.3 16.573A9.026 9.026 0 007 14.935v-3.957l1.818.78a3 3 0 002.364 0l5.508-2.361a11.026 11.026 0 01.25 3.762 1 1 0 01-.89.89 8.968 8.968 0 00-5.35 2.524 1 1 0 01-1.4 0zM6 18a1 1 0 001-1v-2.065a8.935 8.935 0 00-2-.712V17a1 1 0 001 1z"
              />
            </svg>
          </div>
          <span
            class="text-xl font-bold bg-gradient-to-r from-purple-600 to-pink-600 bg-clip-text text-transparent"
            >EduVerse</span
          >
        </a>
      </div>

      <!-- Navigation Menu -->
      <nav class="p-4">
        <ul class="space-y-2">
          <li>
            <a
              href="/admin/dashboard"
              class="flex items-center space-x-3 px-4 py-3 rounded-lg <%= active === 'dashboard' ? 'bg-gradient-to-r from-red-600 to-orange-600 text-white' : 'text-gray-700 hover:bg-red-50 hover:text-red-600' %>"
            >
              <svg class="w-5 h-5" fill="currentColor" viewBox="0 0 20 20">
                <path
                  d="M10.707 2.293a1 1 0 00-1.414 0l-7 7a1 1 0 001.414 1.414L4 10.414V17a1 1 0 001 1h2a1 1 0 001-1v-2a1 1 0 011-1h2a1 1 0 011 1v2a1 1 0 001 1h2a1 1 0 001-1v-6.586l.293.293a1 1 0 001.414-1.414l-7-7z"
                />
              </svg>
              <span>Dashboard</span>
            </a>
          </li>
          <li>
            <a
              href="/admin/courses"
              class="flex items-center space-x-3 px-4 py-3 rounded-lg <%= active === 'courses' ? 'bg-gradient-to-r from-red-600 to-orange-600 text-white' : 'text-gray-700 hover:bg-red-50 hover:text-red-600' %>"
            >
              <svg class="w-5 h-5" fill="currentColor" viewBox="0 0 20 20">
                <path
                  fill-rule="evenodd"
                  d="M6 2a1 1 0 00-1 1v1H4a2 2 0 00-2 2v10a2 2 0 002 2h12a2 2 0 002-2V6a2 2 0 00-2-2h-1V3a1 1 0 10-2 0v1H7V3a1 1 0 00-1-1zm0 5a1 1 0 000 2h8a1 1 0 100-2H6z"
                  clip-rule="evenodd"
                />
              </svg>
              <span>Courses</span>
            </a>
          </li>
          <li>
            <a
              href="/admin/instructors"
              class="flex items-center space-x-3 px-4 py-3 rounded-lg <%= active === 'instructors' ? 'bg-gradient-to-r from-red-600 to-orange-600 text-white' : 'text-gray-700 hover:bg-red-50 hover:text-red-600' %>"
            >
              <svg class="w-5 h-5" fill="currentColor" viewBox="0 0 20 20">
                <path d="M10 9a3 3 0 100-6 3 3 0 000 6zm-7 9a7 7 0 1114 0H3z" />
              </svg>
              <span>Instructors</span>
            </a>
          </li>
          <li>
            <a
              href="/admin/students"
              class="flex items-center space-x-3 px-4 py-3 rounded-lg <%= active === 'students' ? 'bg-gradient-to-r from-red-600 to-orange-600 text-white' : 'text-gray-700 hover:bg-red-50 hover:text-red-600' %>"
            >
              <svg class="w-5 h-5" fill="currentColor" viewBox="0 0 20 20">
                <path
                  d="M13 6a3 3 0 11-6 0 3 3 0 016 0zM18 8a2 2 0 11-4 0 2 2 0 014 0zM14 15a4 4 0 00-8 0v3h8v-3z"
                />
              </svg>
              <span>Students</span>
            </a>
          </li>
          <li>
            <a
              href="/admin/categories"
              class="flex items-center space-x-3 px-4 py-3 rounded-lg <%= active === 'categories' ? 'bg-gradient-to-r from-red-600 to-orange-600 text-white' : 'text-gray-700 hover:bg-red-50 hover:text-red-600' %>"
            >
              <svg class="w-5 h-5" fill="currentColor" viewBox="0 0 20 20">
                <path
                  fill-rule="evenodd"
                  d="M3 4a1 1 0 011-1h12a1 1 0 110 2H4a1 1 0 01-1-1zm0 4a1 1 0 011-1h12a1 1 0 110 2H4a1 1 0 01-1-1zm0 4a1 1 0 011-1h12a1 1 0 110 2H4a1 1 0 01-1-1z"
                  clip-rule="evenodd"
                />
              </svg>
              <span>Categories</span>
            </a>
          </li>

          <li>
            <a
              href="/admin/admins"
              class="flex items-center space-x-3 px-4 py-3 rounded-lg <%= active === 'admins' ? 'bg-gradient-to-r from-red-600 to-orange-600 text-white' : 'text-gray-700 hover:bg-red-50 hover:text-red-600' %>"
            >
              <svg
                xmlns="http://www.w3.org/2000/svg"
                fill="currentColor"
                class="bi bi-person-fill-gear w-5 h-5"
                viewBox="0 0 16 16"
              >
                <path
                  d="M11 5a3 3 0 1 1-6 0 3 3 0 0 1 6 0m-9 8c0 1 1 1 1 1h5.256A4.5 4.5 0 0 1 8 12.5a4.5 4.5 0 0 1 1.544-3.393Q8.844 9.002 8 9c-5 0-6 3-6 4m9.886-3.54c.18-.613 1.048-.613 1.229 0l.043.148a.64.64 0 0 0 .921.382l.136-.074c.561-.306 1.175.308.87.869l-.075.136a.64.64 0 0 0 .382.92l.149.045c.612.18.612 1.048 0 1.229l-.15.043a.64.64 0 0 0-.38.921l.074.136c.305.561-.309 1.175-.87.87l-.136-.075a.64.64 0 0 0-.92.382l-.045.149c-.18.612-1.048.612-1.229 0l-.043-.15a.64.64 0 0 0-.921-.38l-.136.074c-.561.305-1.175-.309-.87-.87l.075-.136a.64.64 0 0 0-.382-.92l-.148-.045c-.613-.18-.613-1.048 0-1.229l.148-.043a.64.64 0 0 0 .382-.921l-.074-.136c-.306-.561.308-1.175.869-.87l.136.075a.64.64 0 0 0 .92-.382zM14 12.5a1.5 1.5 0 1 0-3 0 1.5 1.5 0 0 0 3 0"
                />
              </svg>
              <span>Admins</span>
            </a>
          </li>
        </ul>
      </nav>

      <!-- User Profile Section -->
      <div
        class="absolute bottom-0 left-0 right-0 p-4 border-t border-gray-200"
      >
        <div
          class="flex items-center space-x-3 p-3 rounded-lg hover:bg-gray-50 cursor-pointer"
          onclick="openProfile()"
        >
          <div
            class="w-10 h-10 bg-gradient-to-r from-red-600 to-orange-600 rounded-full flex items-center justify-center"
          >
            <span class="text-sm font-bold text-white"
              ><%= admin.name.split(" ").map((n) => n[0]).join("") %></span
            >
          </div>
          <div class="flex-1">
            <p class="text-sm font-medium text-gray-800"><%= admin.name %></p>
            <p class="text-xs text-gray-600">System Administrator</p>
          </div>
          <svg
            class="w-4 h-4 text-gray-400"
            fill="none"
            stroke="currentColor"
            viewBox="0 0 24 24"
          >
            <path
              stroke-linecap="round"
              stroke-linejoin="round"
              stroke-width="2"
              d="M19 9l-7 7-7-7"
            />
          </svg>
        </div>
      </div>
    </div>

    <!-- Mobile Sidebar Overlay -->
    <div
      id="sidebarOverlay"
      class="fixed inset-0 bg-black bg-opacity-50 z-30 lg:hidden"
    ></div>

    <!-- Main Content -->
    <div class="lg:ml-64">
      <!-- Top Header -->
      <header
        class="bg-white/90 backdrop-blur-sm shadow-sm border-b border-gray-200 sticky top-0 z-20"
      >
        <div class="px-6 py-4">
          <div class="flex items-center justify-between">
            <!-- Mobile Menu Button -->
            <button
              id="mobileMenuBtn"
              class="lg:hidden p-2 rounded-lg hover:bg-gray-100"
            >
              <svg
                class="w-6 h-6"
                fill="none"
                stroke="currentColor"
                viewBox="0 0 24 24"
              >
                <path
                  stroke-linecap="round"
                  stroke-linejoin="round"
                  stroke-width="2"
                  d="M4 6h16M4 12h16M4 18h16"
                />
              </svg>
            </button>

            <!-- Page Title -->
            <div class="flex-1 lg:flex-none">
              <h1 class="text-xl md:text-2xl font-bold text-gray-800">
                <%= typeof title !== 'undefined' ? title : 'Dashboard' %>
              </h1>
            </div>

            <!-- Header Actions -->
            <div class="flex items-center space-x-4">
              <!-- Search -->
              <!-- <div class="hidden md:block relative">
                <input
                  type="text"
                  placeholder="Search..."
                  class="w-64 pl-10 pr-4 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-red-500 focus:border-transparent"
                />
                <svg
                  class="w-5 h-5 text-gray-400 absolute left-3 top-2.5"
                  fill="none"
                  stroke="currentColor"
                  viewBox="0 0 24 24"
                >
                  <path
                    stroke-linecap="round"
                    stroke-linejoin="round"
                    stroke-width="2"
                    d="M21 21l-6-6m2-5a7 7 0 11-14 0 7 7 0 0114 0z"
                  />
                </svg>
              </div> -->

              <!-- Quick Actions -->
              <div class="relative">
                <button
                  id="quickActionsBtn"
                  class="bg-gradient-to-r from-red-600 to-orange-600 text-white px-4 py-2 rounded-lg hover:from-red-700 hover:to-orange-700 transition-all flex items-center space-x-2"
                >
                  <svg class="w-4 h-4" fill="currentColor" viewBox="0 0 20 20">
                    <path
                      fill-rule="evenodd"
                      d="M10 3a1 1 0 011 1v5h5a1 1 0 110 2h-5v5a1 1 0 11-2 0v-5H4a1 1 0 110-2h5V4a1 1 0 011-1z"
                      clip-rule="evenodd"
                    />
                  </svg>
                  <span class="hidden sm:inline">Quick Actions</span>
                </button>
                <div
                  id="quickActionsMenu"
                  class="hidden absolute right-0 mt-2 w-48 bg-white rounded-lg shadow-lg border border-gray-200 z-30"
                >
                  <div class="py-2 flex flex-col">
                    <a
                      href="/admin/create-course"
                      class="w-full text-left px-4 py-2 hover:bg-gray-50 text-sm"
                    >
                      Add New Course
                    </a>
                    <a
                      href="/admin/create-instructor"
                      class="w-full text-left px-4 py-2 hover:bg-gray-50 text-sm"
                    >
                      Add New Instructor
                    </a>
                    <a
                      href="/admin/create-student"
                      class="w-full text-left px-4 py-2 hover:bg-gray-50 text-sm"
                    >
                      Add New Student
                    </a>
                    <a
                      href="/admin/create-category"
                      class="w-full text-left px-4 py-2 hover:bg-gray-50 text-sm"
                    >
                      Add New Category
                    </a>
                    <a
                      href="/admin/create-admin"
                      class="w-full text-left px-4 py-2 hover:bg-gray-50 text-sm"
                    >
                      Add New Admin
                    </a>
                  </div>
                </div>
              </div>

              <!-- Notifications -->
              <button
                id="notificationBtn"
                class="relative p-2 text-gray-600 hover:text-red-600 hover:bg-red-50 rounded-lg transition-all"
              >
                <svg
                  xmlns="http://www.w3.org/2000/svg"
                  width="20"
                  height="20"
                  fill="currentColor"
                  class="bi bi-bell-fill"
                  viewBox="0 0 16 16"
                >
                  <path
                    d="M8 16a2 2 0 0 0 2-2H6a2 2 0 0 0 2 2m.995-14.901a1 1 0 1 0-1.99 0A5 5 0 0 0 3 6c0 1.098-.5 6-2 7h14c-1.5-1-2-5.902-2-7 0-2.42-1.72-4.44-4.005-4.901"
                  />
                </svg>
                <span
                  class="absolute -top-1 -right-1 bg-red-500 text-white text-xs rounded-full w-5 h-5 flex items-center justify-center"
                  >12</span
                >
              </button>
            </div>
          </div>
        </div>
      </header>

      <!-- Main Content Area -->
      <main class="p-6">
        <% if (typeof flash !== 'undefined') { %>
        <div class="mb-4 text-sm text-red-600"><%= flash %></div>
        <% } %>

        <!-- Child feature view (injected by express-ejs-layouts) -->
        <div id="featureContent"><%- body %></div>
      </main>
    </div>

    <!-- Confirm Delete Modal (global) -->
    <div
      id="confirmDeleteModal"
      class="fixed inset-0 z-50 hidden items-center justify-center"
    >
      <div class="absolute inset-0 bg-black/50" data-close-modal></div>
      <div class="bg-white rounded-lg shadow-lg max-w-md w-full mx-4 p-6 z-10">
        <h3 class="text-lg font-semibold text-gray-800 mb-2">Confirm delete</h3>
        <p id="confirmDeleteMessage" class="text-sm text-gray-600 mb-4">
          Are you sure you want to delete this item?
        </p>

        <div class="flex justify-end space-x-2">
          <button
            type="button"
            data-cancel-delete
            class="px-4 py-2 rounded-lg border"
          >
            Cancel
          </button>
          <button
            type="button"
            id="confirmDeleteBtn"
            class="px-4 py-2 rounded-lg bg-red-600 text-white"
          >
            Delete
          </button>
        </div>
      </div>
    </div>

    <!-- Hidden form used for POST-delete (so we can keep RESTful deletes) -->
    <form
      id="confirmDeleteForm"
      method="POST"
      class="hidden"
      aria-hidden="true"
    ></form>

    <% if (success && success.length) { %>
    <div
      id="toastAlert"
      class="z-50 fixed top-4 right-4 flex items-center p-4 mb-4 text-sm text-green-800 border border-green-300 rounded-lg bg-green-50 shadow-lg transition-opacity duration-500"
      role="alert"
    >
      <svg
        class="shrink-0 inline w-4 h-4 me-3"
        xmlns="http://www.w3.org/2000/svg"
        fill="currentColor"
        viewBox="0 0 24 24"
      >
        <path
          fill-rule="evenodd"
          d="M2 12C2 6.477 6.477 2 12 2s10 4.477 10 10-4.477 10-10 10S2 17.523 2 12Zm13.707-1.293a1 1 0 0 0-1.414-1.414L11 12.586l-1.793-1.793a1 1 0 0 0-1.414 1.414l2.5 2.5a1 1 0 0 0 1.414 0l4-4Z"
          clip-rule="evenodd"
        />
      </svg>

      <div><span class="font-medium">Success!</span> <%= success[0] %></div>
    </div>

    <% } %> <% if (error && error.length) { %>
    <div
      id="toastAlert"
      class="z-50 fixed top-4 right-4 flex items-center p-4 mb-4 text-sm text-red-800 border border-red-300 rounded-lg bg-red-50 shadow-lg transition-opacity duration-500"
      role="alert"
    >
      <svg
        class="shrink-0 inline w-4 h-4 me-3"
        aria-hidden="true"
        xmlns="http://www.w3.org/2000/svg"
        fill="currentColor"
        viewBox="0 0 20 20"
      >
        <path
          d="M10 .5a9.5 9.5 0 1 0 9.5 9.5A9.51 9.51 0 0 0 10 .5ZM9.5 4a1.5 1.5 0 1 1 0 3 1.5 1.5 0 0 1 0-3ZM12 15H8a1 1 0 0 1 0-2h1v-3H8a1 1 0 0 1 0-2h2a1 1 0 0 1 1 1v4h1a1 1 0 0 1 0 2Z"
        />
      </svg>

      <div><span class="font-medium">Error!</span> <%= error[0] %></div>
    </div>
    <% } %>

    <script>
      (function () {
        const modal = document.getElementById("confirmDeleteModal");
        const overlay = modal && modal.querySelector("[data-close-modal]");
        const cancelBtn = modal && modal.querySelector("[data-cancel-delete]");
        const confirmBtn = document.getElementById("confirmDeleteBtn");
        const messageEl = document.getElementById("confirmDeleteMessage");
        const form = document.getElementById("confirmDeleteForm");

        function showConfirmDelete(opts = {}) {
          // opts: { message, action, method = 'POST', onConfirmRedirect }
          if (!modal) return;
          messageEl.textContent =
            opts.message || "Are you sure you want to delete this item?";
          form.action = opts.action || "";
          form.method = (opts.method || "POST").toUpperCase();
          // clear form content then optionally insert hidden inputs (e.g. _method)
          form.innerHTML = "";
          if (opts._hidden && typeof opts._hidden === "object") {
            for (const k in opts._hidden) {
              const inp = document.createElement("input");
              inp.type = "hidden";
              inp.name = k;
              inp.value = opts._hidden[k];
              form.appendChild(inp);
            }
          }
          modal.classList.remove("hidden");
          modal.classList.add("flex");
          // bind once
          confirmBtn.onclick = function () {
            if (form.action) {
              form.submit();
            } else if (opts.onConfirmRedirect) {
              window.location.href = opts.onConfirmRedirect;
            } else {
              modal.classList.add("hidden");
              modal.classList.remove("flex");
            }
          };
        }

        function hideConfirm() {
          if (!modal) return;
          modal.classList.add("hidden");
          modal.classList.remove("flex");
        }

        // close handlers
        if (overlay) overlay.addEventListener("click", hideConfirm);
        if (cancelBtn) cancelBtn.addEventListener("click", hideConfirm);

        // delegate: any element with .btn-delete and data-action will show confirm
        document.addEventListener("click", function (e) {
          const el = e.target.closest && e.target.closest(".btn-delete");
          if (!el) return;
          e.preventDefault();
          const action = el.getAttribute("data-action"); // POST URL
          const method = el.getAttribute("data-method") || "POST";
          const msg =
            el.getAttribute("data-confirm-message") ||
            "This action cannot be undone. Are you sure?";
          // optional hidden fields encoded in JSON (data-hidden='{"_method":"DELETE"}')
          let hidden = null;
          const hiddenAttr = el.getAttribute("data-hidden");
          try {
            hidden = hiddenAttr ? JSON.parse(hiddenAttr) : null;
          } catch (err) {
            hidden = null;
          }
          showConfirmDelete({ action, method, message: msg, _hidden: hidden });
        });

        // expose for pages to call programmatically
        window.showConfirmDelete = showConfirmDelete;
      })();

      const toast = document.getElementById("toastAlert");
      if (toast) {
        setTimeout(() => {
          toast.style.opacity = "0";
          setTimeout(() => toast.remove(), 500); // remove after fade
        }, 3000);
      }
    </script>

    <!-- Universal Modals and scripts (keeps behavior consistent for children) -->
    <%- include('../partials/modals') %>

    <script>
      // Initialize admin UI behaviors (idempotent)
      function initAdminUI() {
        const mobileMenuBtn = document.getElementById("mobileMenuBtn");
        const sidebar = document.getElementById("sidebar");
        const sidebarOverlay = document.getElementById("sidebarOverlay");
        const quickActionsBtn = document.getElementById("quickActionsBtn");
        const quickActionsMenu = document.getElementById("quickActionsMenu");

        // mobile menu toggle
        if (mobileMenuBtn && sidebar && sidebarOverlay) {
          const newBtn = mobileMenuBtn.cloneNode(true);
          mobileMenuBtn.parentNode.replaceChild(newBtn, mobileMenuBtn);
          newBtn.addEventListener("click", function () {
            sidebar.classList.toggle("-translate-x-full");
            sidebarOverlay.classList.toggle("hidden");
          });
        }

        // overlay click to close
        if (sidebarOverlay && sidebar) {
          sidebarOverlay.addEventListener("click", function () {
            sidebar.classList.add("-translate-x-full");
            sidebarOverlay.classList.add("hidden");
          });
        }

        // quick actions toggle
        if (quickActionsBtn && quickActionsMenu) {
          // guard to avoid multiple bindings
          quickActionsBtn.addEventListener("click", function (e) {
            e.stopPropagation();
            quickActionsMenu.classList.toggle("hidden");
          });
          document.addEventListener("click", function () {
            quickActionsMenu.classList.add("hidden");
          });
        }

        // Responsive behavior: ensure sidebar visibility matches breakpoint immediately
        function _edu_resizeHandler() {
          try {
            if (!sidebar || !sidebarOverlay) return;
            if (window.innerWidth >= 1024) {
              // desktop: ensure sidebar visible and overlay hidden
              sidebar.classList.remove("-translate-x-full");
              sidebarOverlay.classList.add("hidden");
            } else {
              // mobile: hide sidebar by default (user can open it)
              sidebar.classList.add("-translate-x-full");
              sidebarOverlay.classList.add("hidden");
            }
          } catch (e) {
            // swallow errors to avoid breaking UI
            console.warn("resize handler error", e);
          }
        }

        // remove previous listener if any, attach fresh
        if (window._eduResizeHandler) {
          window.removeEventListener("resize", window._eduResizeHandler);
        }
        window._eduResizeHandler = _edu_resizeHandler;
        window.addEventListener("resize", window._eduResizeHandler);

        // apply once to set initial state
        _edu_resizeHandler();
      }

      // Run when DOM is ready, or immediately if already ready
      // if (document.readyState === "loading") {
      //   document.addEventListener("DOMContentLoaded", initAdminUI);
      // } else {
      //   initAdminUI();
      // }

      // Profile modal functions
      function openProfile() {
        document.getElementById("profileModal").classList.remove("hidden");
        document.body.style.overflow = "hidden";
      }

      function closeProfile() {
        document.getElementById("profileModal").classList.add("hidden");
        document.body.style.overflow = "auto";
      }

      document.addEventListener("DOMContentLoaded", initAdminUI);
    </script>

    <% if (typeof scripts !== 'undefined') { %> <%- scripts %> <% } %>
  </body>
</html>
