<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>EduVerse - Admin Dashboard</title>
    <script src="https://cdn.tailwindcss.com"></script>
    <script>
      tailwind.config = {
        theme: {
          extend: {
            colors: {
              "blue-950": "#1e3a8a",
            },
          },
        },
      };
    </script>
  </head>
  <body class="bg-gradient-to-br from-blue-50 to-indigo-100 min-h-screen">
    <!-- Sidebar -->
    <div
      id="sidebar"
      class="fixed left-0 top-0 h-full w-64 bg-white shadow-xl z-40 transform transition-transform duration-300"
    >
      <!-- Logo -->
      <div class="p-6 border-b border-gray-200">
        <div class="flex items-center space-x-3">
          <div
            class="bg-gradient-to-r from-red-600 to-orange-600 p-2 rounded-lg"
          >
            <svg
              class="w-8 h-8 text-white"
              fill="currentColor"
              viewBox="0 0 20 20"
            >
              <path
                fill-rule="evenodd"
                d="M18 10a8 8 0 11-16 0 8 8 0 0116 0zm-6-3a2 2 0 11-4 0 2 2 0 014 0zm-2 4a5 5 0 00-4.546 2.916A5.986 5.986 0 0010 16a5.986 5.986 0 004.546-2.084A5 5 0 0010 11z"
                clip-rule="evenodd"
              />
            </svg>
          </div>
          <span
            class="text-xl font-bold bg-gradient-to-r from-red-600 to-orange-600 bg-clip-text text-transparent"
            >EduVerse</span
          >
        </div>
        <p class="text-sm text-gray-600 mt-1">Admin Portal</p>
      </div>

      <!-- Navigation Menu -->
      <nav class="p-4">
        <ul class="space-y-2">
          <li>
            <a
              href="#dashboard"
              class="flex items-center space-x-3 px-4 py-3 rounded-lg bg-gradient-to-r from-red-600 to-orange-600 text-white"
            >
              <svg class="w-5 h-5" fill="currentColor" viewBox="0 0 20 20">
                <path
                  d="M10.707 2.293a1 1 0 00-1.414 0l-7 7a1 1 0 001.414 1.414L4 10.414V17a1 1 0 001 1h2a1 1 0 001-1v-2a1 1 0 011-1h2a1 1 0 011 1v2a1 1 0 001 1h2a1 1 0 001-1v-6.586l.293.293a1 1 0 001.414-1.414l-7-7z"
                />
              </svg>
              <span>Dashboard</span>
            </a>
          </li>
          <li>
            <a
              href="#courses"
              class="flex items-center space-x-3 px-4 py-3 rounded-lg text-gray-700 hover:bg-red-50 hover:text-red-600 transition-all"
            >
              <svg class="w-5 h-5" fill="currentColor" viewBox="0 0 20 20">
                <path
                  fill-rule="evenodd"
                  d="M6 2a1 1 0 00-1 1v1H4a2 2 0 00-2 2v10a2 2 0 002 2h12a2 2 0 002-2V6a2 2 0 00-2-2h-1V3a1 1 0 10-2 0v1H7V3a1 1 0 00-1-1zm0 5a1 1 0 000 2h8a1 1 0 100-2H6z"
                  clip-rule="evenodd"
                />
              </svg>
              <span>Courses</span>
            </a>
          </li>
          <li>
            <a
              href="#instructors"
              class="flex items-center space-x-3 px-4 py-3 rounded-lg text-gray-700 hover:bg-red-50 hover:text-red-600 transition-all"
            >
              <svg class="w-5 h-5" fill="currentColor" viewBox="0 0 20 20">
                <path d="M10 9a3 3 0 100-6 3 3 0 000 6zm-7 9a7 7 0 1114 0H3z" />
              </svg>
              <span>Instructors</span>
            </a>
          </li>
          <li>
            <a
              href="#users"
              class="flex items-center space-x-3 px-4 py-3 rounded-lg text-gray-700 hover:bg-red-50 hover:text-red-600 transition-all"
            >
              <svg class="w-5 h-5" fill="currentColor" viewBox="0 0 20 20">
                <path
                  d="M13 6a3 3 0 11-6 0 3 3 0 016 0zM18 8a2 2 0 11-4 0 2 2 0 014 0zM14 15a4 4 0 00-8 0v3h8v-3z"
                />
              </svg>
              <span>Users</span>
            </a>
          </li>
          <li>
            <a
              href="#categories"
              class="flex items-center space-x-3 px-4 py-3 rounded-lg text-gray-700 hover:bg-red-50 hover:text-red-600 transition-all"
            >
              <svg class="w-5 h-5" fill="currentColor" viewBox="0 0 20 20">
                <path
                  fill-rule="evenodd"
                  d="M3 4a1 1 0 011-1h12a1 1 0 110 2H4a1 1 0 01-1-1zm0 4a1 1 0 011-1h12a1 1 0 110 2H4a1 1 0 01-1-1zm0 4a1 1 0 011-1h12a1 1 0 110 2H4a1 1 0 01-1-1z"
                  clip-rule="evenodd"
                />
              </svg>
              <span>Categories</span>
            </a>
          </li>
          <li>
            <a
              href="#payments"
              class="flex items-center space-x-3 px-4 py-3 rounded-lg text-gray-700 hover:bg-red-50 hover:text-red-600 transition-all"
            >
              <svg class="w-5 h-5" fill="currentColor" viewBox="0 0 20 20">
                <path
                  d="M4 4a2 2 0 00-2 2v4a2 2 0 002 2V6h10a2 2 0 00-2-2H4zM14 6a2 2 0 012 2v4a2 2 0 01-2 2H6a2 2 0 01-2-2V8a2 2 0 012-2h8zM6 10a2 2 0 012-2h4a2 2 0 012 2v2a2 2 0 01-2 2H8a2 2 0 01-2-2v-2z"
                />
              </svg>
              <span>Payments</span>
            </a>
          </li>
          <li>
            <a
              href="#analytics"
              class="flex items-center space-x-3 px-4 py-3 rounded-lg text-gray-700 hover:bg-red-50 hover:text-red-600 transition-all"
            >
              <svg class="w-5 h-5" fill="currentColor" viewBox="0 0 20 20">
                <path
                  d="M2 11a1 1 0 011-1h2a1 1 0 011 1v5a1 1 0 01-1 1H3a1 1 0 01-1-1v-5zM8 7a1 1 0 011-1h2a1 1 0 011 1v9a1 1 0 01-1 1H9a1 1 0 01-1-1V7zM14 4a1 1 0 011-1h2a1 1 0 011 1v12a1 1 0 01-1 1h-2a1 1 0 01-1-1V4z"
                />
              </svg>
              <span>Analytics</span>
            </a>
          </li>
          <li>
            <a
              href="#reports"
              class="flex items-center space-x-3 px-4 py-3 rounded-lg text-gray-700 hover:bg-red-50 hover:text-red-600 transition-all"
            >
              <svg class="w-5 h-5" fill="currentColor" viewBox="0 0 20 20">
                <path
                  fill-rule="evenodd"
                  d="M4 4a2 2 0 012-2h8a2 2 0 012 2v12a1 1 0 110 2h-3a1 1 0 01-1-1v-2a1 1 0 00-1-1H9a1 1 0 00-1 1v2a1 1 0 01-1 1H4a1 1 0 110-2V4zm3 1h2v2H7V5zm2 4H7v2h2V9zm2-4h2v2h-2V5zm2 4h-2v2h2V9z"
                  clip-rule="evenodd"
                />
              </svg>
              <span>Reports</span>
            </a>
          </li>
          <li>
            <a
              href="#settings"
              class="flex items-center space-x-3 px-4 py-3 rounded-lg text-gray-700 hover:bg-red-50 hover:text-red-600 transition-all"
            >
              <svg class="w-5 h-5" fill="currentColor" viewBox="0 0 20 20">
                <path
                  fill-rule="evenodd"
                  d="M11.49 3.17c-.38-1.56-2.6-1.56-2.98 0a1.532 1.532 0 01-2.286.948c-1.372-.836-2.942.734-2.106 2.106.54.886.061 2.042-.947 2.287-1.561.379-1.561 2.6 0 2.978a1.532 1.532 0 01.947 2.287c-.836 1.372.734 2.942 2.106 2.106a1.532 1.532 0 012.287.947c.379 1.561 2.6 1.561 2.978 0a1.533 1.533 0 012.287-.947c1.372.836 2.942-.734 2.106-2.106a1.533 1.533 0 01.947-2.287c1.561-.379 1.561-2.6 0-2.978a1.532 1.532 0 01-.947-2.287c.836-1.372-.734-2.942-2.106-2.106a1.532 1.532 0 01-2.287-.947zM10 13a3 3 0 100-6 3 3 0 000 6z"
                  clip-rule="evenodd"
                />
              </svg>
              <span>Settings</span>
            </a>
          </li>
        </ul>
      </nav>

      <!-- User Profile Section -->
      <div
        class="absolute bottom-0 left-0 right-0 p-4 border-t border-gray-200"
      >
        <div
          class="flex items-center space-x-3 p-3 rounded-lg hover:bg-gray-50 cursor-pointer"
          onclick="openProfile()"
        >
          <div
            class="w-10 h-10 bg-gradient-to-r from-red-600 to-orange-600 rounded-full flex items-center justify-center"
          >
            <span class="text-sm font-bold text-white">AD</span>
          </div>
          <div class="flex-1">
            <p class="text-sm font-medium text-gray-800">Admin User</p>
            <p class="text-xs text-gray-600">System Administrator</p>
          </div>
          <svg
            class="w-4 h-4 text-gray-400"
            fill="none"
            stroke="currentColor"
            viewBox="0 0 24 24"
          >
            <path
              stroke-linecap="round"
              stroke-linejoin="round"
              stroke-width="2"
              d="M19 9l-7 7-7-7"
            />
          </svg>
        </div>
      </div>
    </div>

    <!-- Mobile Sidebar Overlay -->
    <div
      id="sidebarOverlay"
      class="fixed inset-0 bg-black bg-opacity-50 z-30 hidden lg:hidden"
    ></div>

    <!-- Main Content -->
    <div class="lg:ml-64">
      <!-- Top Header -->
      <header
        class="bg-white/90 backdrop-blur-sm shadow-sm border-b border-gray-200 sticky top-0 z-20"
      >
        <div class="px-6 py-4">
          <div class="flex items-center justify-between">
            <!-- Mobile Menu Button -->
            <button
              id="mobileMenuBtn"
              class="lg:hidden p-2 rounded-lg hover:bg-gray-100"
            >
              <svg
                class="w-6 h-6"
                fill="none"
                stroke="currentColor"
                viewBox="0 0 24 24"
              >
                <path
                  stroke-linecap="round"
                  stroke-linejoin="round"
                  stroke-width="2"
                  d="M4 6h16M4 12h16M4 18h16"
                />
              </svg>
            </button>

            <!-- Page Title -->
            <div class="flex-1 lg:flex-none">
              <h1 class="text-2xl font-bold text-gray-800">Admin Dashboard</h1>
            </div>

            <!-- Header Actions -->
            <div class="flex items-center space-x-4">
              <!-- Search -->
              <div class="hidden md:block relative">
                <input
                  type="text"
                  placeholder="Search..."
                  class="w-64 pl-10 pr-4 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-red-500 focus:border-transparent"
                />
                <svg
                  class="w-5 h-5 text-gray-400 absolute left-3 top-2.5"
                  fill="none"
                  stroke="currentColor"
                  viewBox="0 0 24 24"
                >
                  <path
                    stroke-linecap="round"
                    stroke-linejoin="round"
                    stroke-width="2"
                    d="M21 21l-6-6m2-5a7 7 0 11-14 0 7 7 0 0114 0z"
                  />
                </svg>
              </div>

              <!-- Quick Actions -->
              <div class="relative">
                <button
                  id="quickActionsBtn"
                  class="bg-gradient-to-r from-red-600 to-orange-600 text-white px-4 py-2 rounded-lg hover:from-red-700 hover:to-orange-700 transition-all flex items-center space-x-2"
                >
                  <svg class="w-4 h-4" fill="currentColor" viewBox="0 0 20 20">
                    <path
                      fill-rule="evenodd"
                      d="M10 3a1 1 0 011 1v5h5a1 1 0 110 2h-5v5a1 1 0 11-2 0v-5H4a1 1 0 110-2h5V4a1 1 0 011-1z"
                      clip-rule="evenodd"
                    />
                  </svg>
                  <span class="hidden sm:inline">Quick Actions</span>
                </button>
                <div
                  id="quickActionsMenu"
                  class="hidden absolute right-0 mt-2 w-48 bg-white rounded-lg shadow-lg border border-gray-200 z-30"
                >
                  <div class="py-2">
                    <button
                      onclick="showCreateModal('course')"
                      class="w-full text-left px-4 py-2 hover:bg-gray-50 text-sm"
                    >
                      Add New Course
                    </button>
                    <button
                      onclick="showCreateModal('instructor')"
                      class="w-full text-left px-4 py-2 hover:bg-gray-50 text-sm"
                    >
                      Add New Instructor
                    </button>
                    <button
                      onclick="showCreateModal('user')"
                      class="w-full text-left px-4 py-2 hover:bg-gray-50 text-sm"
                    >
                      Add New User
                    </button>
                    <button
                      onclick="showCreateModal('category')"
                      class="w-full text-left px-4 py-2 hover:bg-gray-50 text-sm"
                    >
                      Add New Category
                    </button>
                  </div>
                </div>
              </div>

              <!-- Notifications -->
              <button
                id="notificationBtn"
                class="relative p-2 text-gray-600 hover:text-red-600 hover:bg-red-50 rounded-lg transition-all"
              >
                <svg
                  class="w-6 h-6"
                  fill="none"
                  stroke="currentColor"
                  viewBox="0 0 24 24"
                >
                  <path
                    stroke-linecap="round"
                    stroke-linejoin="round"
                    stroke-width="2"
                    d="M15 17h5l-5 5v-5zM10.97 4.97a.235.235 0 0 0-.02.022L7.477 9.417 5.384 7.323a.75.75 0 0 0-1.06 1.061L6.97 11.03a.75.75 0 0 0 1.079-.02l3.992-4.99a.75.75 0 0 0-1.071-1.05z"
                  />
                </svg>
                <span
                  class="absolute -top-1 -right-1 bg-red-500 text-white text-xs rounded-full w-5 h-5 flex items-center justify-center"
                  >12</span
                >
              </button>
            </div>
          </div>
        </div>
      </header>

      <!-- Main Content Area -->
      <main class="p-6">
        <!-- Dashboard Content -->
        <div id="dashboardContent">
          <!-- Welcome Section -->
          <div class="mb-8">
            <h2 class="text-3xl font-bold mb-2">
              <span
                class="bg-gradient-to-r from-red-600 to-orange-600 bg-clip-text text-transparent"
              >
                Welcome to Admin Dashboard! 🛠️
              </span>
            </h2>
            <p class="text-lg text-gray-600">
              Manage your entire EduVerse platform
            </p>
          </div>

          <!-- Stats Cards -->
          <div
            class="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-6 mb-8"
          >
            <div
              class="bg-white rounded-2xl p-6 shadow-lg hover:shadow-xl transition-shadow"
            >
              <div class="flex items-center justify-between">
                <div>
                  <p class="text-gray-600 text-sm">Total Courses</p>
                  <p class="text-3xl font-bold text-blue-600">247</p>
                  <p class="text-sm text-green-600">+12 this month</p>
                </div>
                <div class="bg-blue-100 p-3 rounded-full">
                  <svg
                    class="w-6 h-6 text-blue-600"
                    fill="currentColor"
                    viewBox="0 0 20 20"
                  >
                    <path
                      fill-rule="evenodd"
                      d="M6 2a1 1 0 00-1 1v1H4a2 2 0 00-2 2v10a2 2 0 002 2h12a2 2 0 002-2V6a2 2 0 00-2-2h-1V3a1 1 0 10-2 0v1H7V3a1 1 0 00-1-1zm0 5a1 1 0 000 2h8a1 1 0 100-2H6z"
                      clip-rule="evenodd"
                    />
                  </svg>
                </div>
              </div>
            </div>

            <div
              class="bg-white rounded-2xl p-6 shadow-lg hover:shadow-xl transition-shadow"
            >
              <div class="flex items-center justify-between">
                <div>
                  <p class="text-gray-600 text-sm">Total Instructors</p>
                  <p class="text-3xl font-bold text-purple-600">89</p>
                  <p class="text-sm text-green-600">+5 this month</p>
                </div>
                <div class="bg-purple-100 p-3 rounded-full">
                  <svg
                    class="w-6 h-6 text-purple-600"
                    fill="currentColor"
                    viewBox="0 0 20 20"
                  >
                    <path
                      d="M10 9a3 3 0 100-6 3 3 0 000 6zm-7 9a7 7 0 1114 0H3z"
                    />
                  </svg>
                </div>
              </div>
            </div>

            <div
              class="bg-white rounded-2xl p-6 shadow-lg hover:shadow-xl transition-shadow"
            >
              <div class="flex items-center justify-between">
                <div>
                  <p class="text-gray-600 text-sm">Total Users</p>
                  <p class="text-3xl font-bold text-green-600">15,247</p>
                  <p class="text-sm text-green-600">+1,234 this month</p>
                </div>
                <div class="bg-green-100 p-3 rounded-full">
                  <svg
                    class="w-6 h-6 text-green-600"
                    fill="currentColor"
                    viewBox="0 0 20 20"
                  >
                    <path
                      d="M13 6a3 3 0 11-6 0 3 3 0 016 0zM18 8a2 2 0 11-4 0 2 2 0 014 0zM14 15a4 4 0 00-8 0v3h8v-3z"
                    />
                  </svg>
                </div>
              </div>
            </div>

            <div
              class="bg-white rounded-2xl p-6 shadow-lg hover:shadow-xl transition-shadow"
            >
              <div class="flex items-center justify-between">
                <div>
                  <p class="text-gray-600 text-sm">Total Revenue</p>
                  <p class="text-3xl font-bold text-yellow-600">$284,450</p>
                  <p class="text-sm text-green-600">+23% this month</p>
                </div>
                <div class="bg-yellow-100 p-3 rounded-full">
                  <svg
                    class="w-6 h-6 text-yellow-600"
                    fill="currentColor"
                    viewBox="0 0 20 20"
                  >
                    <path
                      d="M8.433 7.418c.155-.103.346-.196.567-.267v1.698a2.305 2.305 0 01-.567-.267C8.07 8.34 8 8.114 8 8c0-.114.07-.34.433-.582zM11 12.849v-1.698c.22.071.412.164.567.267.364.243.433.468.433.582 0 .114-.07.34-.433.582a2.305 2.305 0 01-.567.267z"
                    />
                    <path
                      fill-rule="evenodd"
                      d="M10 18a8 8 0 100-16 8 8 0 000 16zm1-13a1 1 0 10-2 0v.092a4.535 4.535 0 00-1.676.662C6.602 6.234 6 7.009 6 8c0 .99.602 1.765 1.324 2.246.48.32 1.054.545 1.676.662v1.941c-.391-.127-.68-.317-.843-.504a1 1 0 10-1.51 1.31c.562.649 1.413 1.076 2.353 1.253V15a1 1 0 102 0v-.092a4.535 4.535 0 001.676-.662C13.398 13.766 14 12.991 14 12c0-.99-.602-1.765-1.324-2.246A4.535 4.535 0 0011 9.092V7.151c.391.127.68.317.843.504a1 1 0 101.511-1.31c-.563-.649-1.413-1.076-2.354-1.253V5z"
                      clip-rule="evenodd"
                    />
                  </svg>
                </div>
              </div>
            </div>
          </div>

          <!-- Recent Activity & System Overview -->
          <div class="grid grid-cols-1 xl:grid-cols-3 gap-8">
            <!-- Recent Activity -->
            <div class="xl:col-span-2">
              <div class="bg-white rounded-2xl p-6 shadow-lg">
                <h3 class="text-xl font-bold text-gray-800 mb-6">
                  Recent Activity
                </h3>

                <div class="space-y-4" id="recentActivity">
                  <div
                    class="flex items-start space-x-4 p-4 bg-blue-50 rounded-lg"
                  >
                    <div class="bg-blue-100 p-2 rounded-full">
                      <svg
                        class="w-4 h-4 text-blue-600"
                        fill="currentColor"
                        viewBox="0 0 20 20"
                      >
                        <path
                          fill-rule="evenodd"
                          d="M6 2a1 1 0 00-1 1v1H4a2 2 0 00-2 2v10a2 2 0 002 2h12a2 2 0 002-2V6a2 2 0 00-2-2h-1V3a1 1 0 10-2 0v1H7V3a1 1 0 00-1-1zm0 5a1 1 0 000 2h8a1 1 0 100-2H6z"
                          clip-rule="evenodd"
                        />
                      </svg>
                    </div>
                    <div class="flex-1">
                      <p class="text-sm font-medium text-gray-800">
                        New course "Advanced React Patterns" published
                      </p>
                      <p class="text-xs text-gray-600">
                        by Dr. Sarah Wilson • 2 hours ago
                      </p>
                    </div>
                  </div>

                  <div
                    class="flex items-start space-x-4 p-4 bg-green-50 rounded-lg"
                  >
                    <div class="bg-green-100 p-2 rounded-full">
                      <svg
                        class="w-4 h-4 text-green-600"
                        fill="currentColor"
                        viewBox="0 0 20 20"
                      >
                        <path
                          d="M13 6a3 3 0 11-6 0 3 3 0 016 0zM18 8a2 2 0 11-4 0 2 2 0 014 0zM14 15a4 4 0 00-8 0v3h8v-3z"
                        />
                      </svg>
                    </div>
                    <div class="flex-1">
                      <p class="text-sm font-medium text-gray-800">
                        127 new user registrations today
                      </p>
                      <p class="text-xs text-gray-600">
                        Peak registration time: 2-4 PM • 4 hours ago
                      </p>
                    </div>
                  </div>

                  <div
                    class="flex items-start space-x-4 p-4 bg-purple-50 rounded-lg"
                  >
                    <div class="bg-purple-100 p-2 rounded-full">
                      <svg
                        class="w-4 h-4 text-purple-600"
                        fill="currentColor"
                        viewBox="0 0 20 20"
                      >
                        <path
                          d="M10 9a3 3 0 100-6 3 3 0 000 6zm-7 9a7 7 0 1114 0H3z"
                        />
                      </svg>
                    </div>
                    <div class="flex-1">
                      <p class="text-sm font-medium text-gray-800">
                        New instructor application approved
                      </p>
                      <p class="text-xs text-gray-600">
                        Michael Chen - Data Science Expert • 6 hours ago
                      </p>
                    </div>
                  </div>

                  <div
                    class="flex items-start space-x-4 p-4 bg-yellow-50 rounded-lg"
                  >
                    <div class="bg-yellow-100 p-2 rounded-full">
                      <svg
                        class="w-4 h-4 text-yellow-600"
                        fill="currentColor"
                        viewBox="0 0 20 20"
                      >
                        <path
                          d="M8.433 7.418c.155-.103.346-.196.567-.267v1.698a2.305 2.305 0 01-.567-.267C8.07 8.34 8 8.114 8 8c0-.114.07-.34.433-.582zM11 12.849v-1.698c.22.071.412.164.567.267.364.243.433.468.433.582 0 .114-.07.34-.433.582a2.305 2.305 0 01-.567.267z"
                        />
                        <path
                          fill-rule="evenodd"
                          d="M10 18a8 8 0 100-16 8 8 0 000 16zm1-13a1 1 0 10-2 0v.092a4.535 4.535 0 00-1.676.662C6.602 6.234 6 7.009 6 8c0 .99.602 1.765 1.324 2.246.48.32 1.054.545 1.676.662v1.941c-.391-.127-.68-.317-.843-.504a1 1 0 10-1.51 1.31c.562.649 1.413 1.076 2.353 1.253V15a1 1 0 102 0v-.092a4.535 4.535 0 001.676-.662C13.398 13.766 14 12.991 14 12c0-.99-.602-1.765-1.324-2.246A4.535 4.535 0 0011 9.092V7.151c.391.127.68.317.843.504a1 1 0 101.511-1.31c-.563-.649-1.413-1.076-2.354-1.253V5z"
                          clip-rule="evenodd"
                        />
                      </svg>
                    </div>
                    <div class="flex-1">
                      <p class="text-sm font-medium text-gray-800">
                        Payment processed: $15,240
                      </p>
                      <p class="text-xs text-gray-600">
                        Monthly instructor payouts • 8 hours ago
                      </p>
                    </div>
                  </div>
                </div>
              </div>
            </div>

            <!-- System Overview -->
            <div class="space-y-6">
              <!-- System Health -->
              <div
                class="bg-gradient-to-r from-red-500 to-orange-500 rounded-2xl p-6 text-white shadow-lg"
              >
                <h3 class="text-lg font-bold mb-4">System Health</h3>
                <div class="space-y-3">
                  <div class="flex justify-between">
                    <span>Server Status</span>
                    <span class="font-bold">🟢 Online</span>
                  </div>
                  <div class="flex justify-between">
                    <span>Database</span>
                    <span class="font-bold">🟢 Healthy</span>
                  </div>
                  <div class="flex justify-between">
                    <span>CDN Status</span>
                    <span class="font-bold">🟢 Active</span>
                  </div>
                  <div class="flex justify-between">
                    <span>Uptime</span>
                    <span class="font-bold">99.9%</span>
                  </div>
                </div>
              </div>

              <!-- Quick Actions -->
              <div class="bg-white rounded-2xl p-6 shadow-lg">
                <h3 class="text-lg font-bold text-gray-800 mb-4">
                  Quick Actions
                </h3>
                <div class="space-y-3">
                  <button
                    onclick="showCourses()"
                    class="w-full text-left px-4 py-3 rounded-lg hover:bg-blue-50 transition-colors flex items-center space-x-3"
                  >
                    <svg
                      class="w-5 h-5 text-blue-600"
                      fill="currentColor"
                      viewBox="0 0 20 20"
                    >
                      <path
                        fill-rule="evenodd"
                        d="M6 2a1 1 0 00-1 1v1H4a2 2 0 00-2 2v10a2 2 0 002 2h12a2 2 0 002-2V6a2 2 0 00-2-2h-1V3a1 1 0 10-2 0v1H7V3a1 1 0 00-1-1zm0 5a1 1 0 000 2h8a1 1 0 100-2H6z"
                        clip-rule="evenodd"
                      />
                    </svg>
                    <span class="text-sm font-medium">Manage Courses</span>
                  </button>

                  <button
                    onclick="showInstructors()"
                    class="w-full text-left px-4 py-3 rounded-lg hover:bg-purple-50 transition-colors flex items-center space-x-3"
                  >
                    <svg
                      class="w-5 h-5 text-purple-600"
                      fill="currentColor"
                      viewBox="0 0 20 20"
                    >
                      <path
                        d="M10 9a3 3 0 100-6 3 3 0 000 6zm-7 9a7 7 0 1114 0H3z"
                      />
                    </svg>
                    <span class="text-sm font-medium">Manage Instructors</span>
                  </button>

                  <button
                    onclick="showUsers()"
                    class="w-full text-left px-4 py-3 rounded-lg hover:bg-green-50 transition-colors flex items-center space-x-3"
                  >
                    <svg
                      class="w-5 h-5 text-green-600"
                      fill="currentColor"
                      viewBox="0 0 20 20"
                    >
                      <path
                        d="M13 6a3 3 0 11-6 0 3 3 0 016 0zM18 8a2 2 0 11-4 0 2 2 0 014 0zM14 15a4 4 0 00-8 0v3h8v-3z"
                      />
                    </svg>
                    <span class="text-sm font-medium">Manage Users</span>
                  </button>

                  <button
                    onclick="showAnalytics()"
                    class="w-full text-left px-4 py-3 rounded-lg hover:bg-yellow-50 transition-colors flex items-center space-x-3"
                  >
                    <svg
                      class="w-5 h-5 text-yellow-600"
                      fill="currentColor"
                      viewBox="0 0 20 20"
                    >
                      <path
                        d="M2 11a1 1 0 011-1h2a1 1 0 011 1v5a1 1 0 01-1 1H3a1 1 0 01-1-1v-5zM8 7a1 1 0 011-1h2a1 1 0 011 1v9a1 1 0 01-1 1H9a1 1 0 01-1-1V7zM14 4a1 1 0 011-1h2a1 1 0 011 1v12a1 1 0 01-1 1h-2a1 1 0 01-1-1V4z"
                      />
                    </svg>
                    <span class="text-sm font-medium">View Analytics</span>
                  </button>
                </div>
              </div>

              <!-- Platform Stats -->
              <div class="bg-white rounded-2xl p-6 shadow-lg">
                <h3 class="text-lg font-bold text-gray-800 mb-4">
                  Platform Stats
                </h3>
                <div class="space-y-3">
                  <div class="flex justify-between">
                    <span class="text-gray-600">Active Courses</span>
                    <span class="font-medium">189</span>
                  </div>
                  <div class="flex justify-between">
                    <span class="text-gray-600">Pending Reviews</span>
                    <span class="font-medium">23</span>
                  </div>
                  <div class="flex justify-between">
                    <span class="text-gray-600">Support Tickets</span>
                    <span class="font-medium">7</span>
                  </div>
                  <div class="flex justify-between">
                    <span class="text-gray-600">System Alerts</span>
                    <span class="font-medium">2</span>
                  </div>
                </div>
              </div>
            </div>
          </div>
        </div>

        <!-- Courses Management Content -->
        <div id="coursesContent" class="hidden">
          <div class="flex items-center justify-between mb-6">
            <h2 class="text-2xl font-bold text-gray-800">Course Management</h2>
            <button
              onclick="showCreateModal('course')"
              class="bg-gradient-to-r from-red-600 to-orange-600 text-white px-6 py-2 rounded-lg hover:from-red-700 hover:to-orange-700 transition-all flex items-center space-x-2"
            >
              <svg class="w-4 h-4" fill="currentColor" viewBox="0 0 20 20">
                <path
                  fill-rule="evenodd"
                  d="M10 3a1 1 0 011 1v5h5a1 1 0 110 2h-5v5a1 1 0 11-2 0v-5H4a1 1 0 110-2h5V4a1 1 0 011-1z"
                  clip-rule="evenodd"
                />
              </svg>
              <span>Add New Course</span>
            </button>
          </div>

          <!-- Course Filters -->
          <div class="bg-white rounded-lg p-4 mb-6 shadow-sm">
            <div class="flex flex-wrap gap-4 items-center">
              <div class="flex space-x-2">
                <button
                  class="px-4 py-2 bg-red-100 text-red-600 rounded-lg font-medium text-sm"
                >
                  All Courses
                </button>
                <button
                  class="px-4 py-2 text-gray-600 hover:bg-gray-100 rounded-lg text-sm"
                >
                  Published
                </button>
                <button
                  class="px-4 py-2 text-gray-600 hover:bg-gray-100 rounded-lg text-sm"
                >
                  Draft
                </button>
                <button
                  class="px-4 py-2 text-gray-600 hover:bg-gray-100 rounded-lg text-sm"
                >
                  Pending Review
                </button>
                <button
                  class="px-4 py-2 text-gray-600 hover:bg-gray-100 rounded-lg text-sm"
                >
                  Archived
                </button>
              </div>
              <div class="flex-1"></div>
              <div class="relative">
                <input
                  type="text"
                  placeholder="Search courses..."
                  class="pl-10 pr-4 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-red-500 focus:border-transparent"
                />
                <svg
                  class="w-4 h-4 text-gray-400 absolute left-3 top-3"
                  fill="none"
                  stroke="currentColor"
                  viewBox="0 0 24 24"
                >
                  <path
                    stroke-linecap="round"
                    stroke-linejoin="round"
                    stroke-width="2"
                    d="M21 21l-6-6m2-5a7 7 0 11-14 0 7 7 0 0114 0z"
                  />
                </svg>
              </div>
            </div>
          </div>

          <!-- Courses Table -->
          <div class="bg-white rounded-lg shadow-sm overflow-hidden">
            <div class="overflow-x-auto">
              <table class="w-full">
                <thead class="bg-gray-50">
                  <tr>
                    <th
                      class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider"
                    >
                      Course
                    </th>
                    <th
                      class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider"
                    >
                      Instructor
                    </th>
                    <th
                      class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider"
                    >
                      Category
                    </th>
                    <th
                      class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider"
                    >
                      Students
                    </th>
                    <th
                      class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider"
                    >
                      Price
                    </th>
                    <th
                      class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider"
                    >
                      Status
                    </th>
                    <th
                      class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider"
                    >
                      Actions
                    </th>
                  </tr>
                </thead>
                <tbody
                  class="bg-white divide-y divide-gray-200"
                  id="coursesTableBody"
                >
                  <!-- Table rows will be populated by JavaScript -->
                </tbody>
              </table>
            </div>
          </div>
        </div>

        <!-- Instructors Management Content -->
        <div id="instructorsContent" class="hidden">
          <div class="flex items-center justify-between mb-6">
            <h2 class="text-2xl font-bold text-gray-800">
              Instructor Management
            </h2>
            <button
              onclick="showCreateModal('instructor')"
              class="bg-gradient-to-r from-red-600 to-orange-600 text-white px-6 py-2 rounded-lg hover:from-red-700 hover:to-orange-700 transition-all flex items-center space-x-2"
            >
              <svg class="w-4 h-4" fill="currentColor" viewBox="0 0 20 20">
                <path
                  fill-rule="evenodd"
                  d="M10 3a1 1 0 011 1v5h5a1 1 0 110 2h-5v5a1 1 0 11-2 0v-5H4a1 1 0 110-2h5V4a1 1 0 011-1z"
                  clip-rule="evenodd"
                />
              </svg>
              <span>Add New Instructor</span>
            </button>
          </div>

          <!-- Instructors Grid -->
          <div
            class="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6"
            id="instructorsGrid"
          >
            <!-- Instructor cards will be populated by JavaScript -->
          </div>
        </div>

        <!-- Users Management Content -->
        <div id="usersContent" class="hidden">
          <div class="flex items-center justify-between mb-6">
            <h2 class="text-2xl font-bold text-gray-800">User Management</h2>
            <button
              onclick="showCreateModal('user')"
              class="bg-gradient-to-r from-red-600 to-orange-600 text-white px-6 py-2 rounded-lg hover:from-red-700 hover:to-orange-700 transition-all flex items-center space-x-2"
            >
              <svg class="w-4 h-4" fill="currentColor" viewBox="0 0 20 20">
                <path
                  fill-rule="evenodd"
                  d="M10 3a1 1 0 011 1v5h5a1 1 0 110 2h-5v5a1 1 0 11-2 0v-5H4a1 1 0 110-2h5V4a1 1 0 011-1z"
                  clip-rule="evenodd"
                />
              </svg>
              <span>Add New User</span>
            </button>
          </div>

          <!-- User Filters -->
          <div class="bg-white rounded-lg p-4 mb-6 shadow-sm">
            <div class="flex flex-wrap gap-4 items-center">
              <div class="flex space-x-2">
                <button
                  class="px-4 py-2 bg-red-100 text-red-600 rounded-lg font-medium text-sm"
                >
                  All Users
                </button>
                <button
                  class="px-4 py-2 text-gray-600 hover:bg-gray-100 rounded-lg text-sm"
                >
                  Active
                </button>
                <button
                  class="px-4 py-2 text-gray-600 hover:bg-gray-100 rounded-lg text-sm"
                >
                  Inactive
                </button>
                <button
                  class="px-4 py-2 text-gray-600 hover:bg-gray-100 rounded-lg text-sm"
                >
                  Premium
                </button>
              </div>
              <div class="flex-1"></div>
              <div class="relative">
                <input
                  type="text"
                  placeholder="Search users..."
                  class="pl-10 pr-4 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-red-500 focus:border-transparent"
                />
                <svg
                  class="w-4 h-4 text-gray-400 absolute left-3 top-3"
                  fill="none"
                  stroke="currentColor"
                  viewBox="0 0 24 24"
                >
                  <path
                    stroke-linecap="round"
                    stroke-linejoin="round"
                    stroke-width="2"
                    d="M21 21l-6-6m2-5a7 7 0 11-14 0 7 7 0 0114 0z"
                  />
                </svg>
              </div>
            </div>
          </div>

          <!-- Users Table -->
          <div class="bg-white rounded-lg shadow-sm overflow-hidden">
            <div class="overflow-x-auto">
              <table class="w-full">
                <thead class="bg-gray-50">
                  <tr>
                    <th
                      class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider"
                    >
                      User
                    </th>
                    <th
                      class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider"
                    >
                      Email
                    </th>
                    <th
                      class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider"
                    >
                      Joined
                    </th>
                    <th
                      class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider"
                    >
                      Courses
                    </th>
                    <th
                      class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider"
                    >
                      Status
                    </th>
                    <th
                      class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider"
                    >
                      Actions
                    </th>
                  </tr>
                </thead>
                <tbody
                  class="bg-white divide-y divide-gray-200"
                  id="usersTableBody"
                >
                  <!-- Table rows will be populated by JavaScript -->
                </tbody>
              </table>
            </div>
          </div>
        </div>

        <!-- Categories Management Content -->
        <div id="categoriesContent" class="hidden">
          <div class="flex items-center justify-between mb-6">
            <h2 class="text-2xl font-bold text-gray-800">
              Category Management
            </h2>
            <button
              onclick="showCreateModal('category')"
              class="bg-gradient-to-r from-red-600 to-orange-600 text-white px-6 py-2 rounded-lg hover:from-red-700 hover:to-orange-700 transition-all flex items-center space-x-2"
            >
              <svg class="w-4 h-4" fill="currentColor" viewBox="0 0 20 20">
                <path
                  fill-rule="evenodd"
                  d="M10 3a1 1 0 011 1v5h5a1 1 0 110 2h-5v5a1 1 0 11-2 0v-5H4a1 1 0 110-2h5V4a1 1 0 011-1z"
                  clip-rule="evenodd"
                />
              </svg>
              <span>Add New Category</span>
            </button>
          </div>

          <!-- Categories Grid -->
          <div
            class="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 xl:grid-cols-4 gap-6"
            id="categoriesGrid"
          >
            <!-- Category cards will be populated by JavaScript -->
          </div>
        </div>

        <!-- Analytics Content -->
        <div id="analyticsContent" class="hidden">
          <h2 class="text-2xl font-bold text-gray-800 mb-6">
            Analytics Dashboard
          </h2>

          <!-- Analytics Charts Placeholder -->
          <div class="grid grid-cols-1 lg:grid-cols-2 gap-6 mb-8">
            <div class="bg-white rounded-2xl p-6 shadow-lg">
              <h3 class="text-lg font-bold text-gray-800 mb-4">
                Revenue Trends
              </h3>
              <div
                class="h-64 bg-gradient-to-r from-blue-100 to-purple-100 rounded-lg flex items-center justify-center"
              >
                <p class="text-gray-600">
                  📈 Revenue chart would be displayed here
                </p>
              </div>
            </div>

            <div class="bg-white rounded-2xl p-6 shadow-lg">
              <h3 class="text-lg font-bold text-gray-800 mb-4">User Growth</h3>
              <div
                class="h-64 bg-gradient-to-r from-green-100 to-blue-100 rounded-lg flex items-center justify-center"
              >
                <p class="text-gray-600">
                  📊 User growth chart would be displayed here
                </p>
              </div>
            </div>
          </div>

          <!-- Analytics Stats -->
          <div class="grid grid-cols-1 md:grid-cols-3 gap-6">
            <div class="bg-white rounded-2xl p-6 shadow-lg">
              <h3 class="text-lg font-bold text-gray-800 mb-4">
                Course Performance
              </h3>
              <div class="space-y-3">
                <div class="flex justify-between">
                  <span class="text-gray-600">Completion Rate</span>
                  <span class="font-bold text-green-600">78%</span>
                </div>
                <div class="flex justify-between">
                  <span class="text-gray-600">Average Rating</span>
                  <span class="font-bold text-yellow-600">4.7/5</span>
                </div>
                <div class="flex justify-between">
                  <span class="text-gray-600">Drop-off Rate</span>
                  <span class="font-bold text-red-600">22%</span>
                </div>
              </div>
            </div>

            <div class="bg-white rounded-2xl p-6 shadow-lg">
              <h3 class="text-lg font-bold text-gray-800 mb-4">
                Popular Categories
              </h3>
              <div class="space-y-3">
                <div class="flex justify-between">
                  <span class="text-gray-600">Programming</span>
                  <span class="font-bold">45%</span>
                </div>
                <div class="flex justify-between">
                  <span class="text-gray-600">Design</span>
                  <span class="font-bold">28%</span>
                </div>
                <div class="flex justify-between">
                  <span class="text-gray-600">Business</span>
                  <span class="font-bold">27%</span>
                </div>
              </div>
            </div>

            <div class="bg-white rounded-2xl p-6 shadow-lg">
              <h3 class="text-lg font-bold text-gray-800 mb-4">
                Traffic Sources
              </h3>
              <div class="space-y-3">
                <div class="flex justify-between">
                  <span class="text-gray-600">Direct</span>
                  <span class="font-bold">42%</span>
                </div>
                <div class="flex justify-between">
                  <span class="text-gray-600">Search</span>
                  <span class="font-bold">35%</span>
                </div>
                <div class="flex justify-between">
                  <span class="text-gray-600">Social</span>
                  <span class="font-bold">23%</span>
                </div>
              </div>
            </div>
          </div>
        </div>
      </main>
    </div>

    <!-- Universal Create/Edit Modal -->
    <div
      id="universalModal"
      class="fixed inset-0 bg-black bg-opacity-50 hidden z-50 flex items-center justify-center p-4"
    >
      <div
        class="bg-white rounded-2xl max-w-2xl w-full max-h-[90vh] overflow-y-auto"
      >
        <div class="p-6">
          <div class="flex items-center justify-between mb-6">
            <h2 id="modalTitle" class="text-2xl font-bold text-gray-800">
              Create Item
            </h2>
            <button
              onclick="closeModal()"
              class="text-gray-500 hover:text-gray-700"
            >
              <svg
                class="w-6 h-6"
                fill="none"
                stroke="currentColor"
                viewBox="0 0 24 24"
              >
                <path
                  stroke-linecap="round"
                  stroke-linejoin="round"
                  stroke-width="2"
                  d="M6 18L18 6M6 6l12 12"
                />
              </svg>
            </button>
          </div>

          <form id="universalForm" class="space-y-6">
            <div id="modalContent">
              <!-- Dynamic content will be inserted here -->
            </div>

            <div class="flex justify-end space-x-4">
              <button
                type="button"
                onclick="closeModal()"
                class="px-6 py-2 border border-gray-300 text-gray-700 rounded-lg hover:bg-gray-50 transition-colors"
              >
                Cancel
              </button>
              <button
                type="submit"
                class="px-6 py-2 bg-gradient-to-r from-red-600 to-orange-600 text-white rounded-lg hover:from-red-700 hover:to-orange-700 transition-all"
              >
                Save
              </button>
            </div>
          </form>
        </div>
      </div>
    </div>

    <!-- Detail View Modal -->
    <div
      id="detailModal"
      class="fixed inset-0 bg-black bg-opacity-50 hidden z-50 flex items-center justify-center p-4"
    >
      <div
        class="bg-white rounded-2xl max-w-4xl w-full max-h-[90vh] overflow-y-auto"
      >
        <div class="p-6">
          <div class="flex items-center justify-between mb-6">
            <h2 id="detailModalTitle" class="text-2xl font-bold text-gray-800">
              Item Details
            </h2>
            <button
              onclick="closeDetailModal()"
              class="text-gray-500 hover:text-gray-700"
            >
              <svg
                class="w-6 h-6"
                fill="none"
                stroke="currentColor"
                viewBox="0 0 24 24"
              >
                <path
                  stroke-linecap="round"
                  stroke-linejoin="round"
                  stroke-width="2"
                  d="M6 18L18 6M6 6l12 12"
                />
              </svg>
            </button>
          </div>

          <div id="detailModalContent">
            <!-- Dynamic content will be inserted here -->
          </div>
        </div>
      </div>
    </div>

    <!-- Profile Modal -->
    <div
      id="profileModal"
      class="fixed inset-0 bg-black bg-opacity-50 hidden z-50 flex items-center justify-center p-4"
    >
      <div class="bg-white rounded-2xl max-w-md w-full">
        <div class="p-6">
          <div class="flex items-center justify-between mb-6">
            <h2 class="text-xl font-bold text-gray-800">Admin Menu</h2>
            <button
              onclick="closeProfile()"
              class="text-gray-500 hover:text-gray-700"
            >
              <svg
                class="w-6 h-6"
                fill="none"
                stroke="currentColor"
                viewBox="0 0 24 24"
              >
                <path
                  stroke-linecap="round"
                  stroke-linejoin="round"
                  stroke-width="2"
                  d="M6 18L18 6M6 6l12 12"
                />
              </svg>
            </button>
          </div>

          <!-- Profile Info -->
          <div class="text-center mb-6">
            <div
              class="w-20 h-20 bg-gradient-to-r from-red-600 to-orange-600 rounded-full flex items-center justify-center mx-auto mb-4"
            >
              <span class="text-2xl font-bold text-white">AD</span>
            </div>
            <h3 class="text-xl font-bold text-gray-800">Admin User</h3>
            <p class="text-gray-600">System Administrator</p>
          </div>

          <div class="space-y-2">
            <button
              class="w-full text-left px-4 py-3 rounded-lg hover:bg-gray-50 transition-colors flex items-center space-x-3"
            >
              <svg
                class="w-5 h-5 text-gray-600"
                fill="none"
                stroke="currentColor"
                viewBox="0 0 24 24"
              >
                <path
                  stroke-linecap="round"
                  stroke-linejoin="round"
                  stroke-width="2"
                  d="M16 7a4 4 0 11-8 0 4 4 0 018 0zM12 14a7 7 0 00-7 7h14a7 7 0 00-7-7z"
                />
              </svg>
              <span>Edit Profile</span>
            </button>

            <button
              class="w-full text-left px-4 py-3 rounded-lg hover:bg-gray-50 transition-colors flex items-center space-x-3"
            >
              <svg
                class="w-5 h-5 text-gray-600"
                fill="none"
                stroke="currentColor"
                viewBox="0 0 24 24"
              >
                <path
                  stroke-linecap="round"
                  stroke-linejoin="round"
                  stroke-width="2"
                  d="M10.325 4.317c.426-1.756 2.924-1.756 3.35 0a1.724 1.724 0 002.573 1.066c1.543-.94 3.31.826 2.37 2.37a1.724 1.724 0 001.065 2.572c1.756.426 1.756 2.924 0 3.35a1.724 1.724 0 00-1.066 2.573c.94 1.543-.826 3.31-2.37 2.37a1.724 1.724 0 00-2.572 1.065c-.426 1.756-2.924 1.756-3.35 0a1.724 1.724 0 00-2.573-1.066c-1.543.94-3.31-.826-2.37-2.37a1.724 1.724 0 00-1.065-2.572c-1.756-.426-1.756-2.924 0-3.35a1.724 1.724 0 001.066-2.573c-.94-1.543.826-3.31 2.37-2.37.996.608 2.296.07 2.572-1.065z"
                />
                <path
                  stroke-linecap="round"
                  stroke-linejoin="round"
                  stroke-width="2"
                  d="M15 12a3 3 0 11-6 0 3 3 0 016 0z"
                />
              </svg>
              <span>System Settings</span>
            </button>

            <button
              class="w-full text-left px-4 py-3 rounded-lg hover:bg-gray-50 transition-colors flex items-center space-x-3"
            >
              <svg
                class="w-5 h-5 text-gray-600"
                fill="none"
                stroke="currentColor"
                viewBox="0 0 24 24"
              >
                <path
                  stroke-linecap="round"
                  stroke-linejoin="round"
                  stroke-width="2"
                  d="M9 12l2 2 4-4m6 2a9 9 0 11-18 0 9 9 0 0118 0z"
                />
              </svg>
              <span>Audit Logs</span>
            </button>

            <hr class="my-2" />

            <button
              class="w-full text-left px-4 py-3 rounded-lg hover:bg-red-50 transition-colors flex items-center space-x-3 text-red-600"
            >
              <svg
                class="w-5 h-5"
                fill="none"
                stroke="currentColor"
                viewBox="0 0 24 24"
              >
                <path
                  stroke-linecap="round"
                  stroke-linejoin="round"
                  stroke-width="2"
                  d="M17 16l4-4m0 0l-4-4m4 4H7m6 4v1a3 3 0 01-3 3H6a3 3 0 01-3-3V7a3 3 0 013-3h4a3 3 0 013 3v1"
                />
              </svg>
              <span>Sign Out</span>
            </button>
          </div>
        </div>
      </div>
    </div>

    <script>
      // Sample data
      let courses = [
        {
          id: 1,
          title: "Advanced JavaScript Concepts",
          instructor: "Dr. Sarah Wilson",
          category: "Programming",
          students: 234,
          price: 99.99,
          status: "published",
          rating: 4.8,
          created: "2024-01-15",
        },
        {
          id: 2,
          title: "React Development Masterclass",
          instructor: "Michael Chen",
          category: "Programming",
          students: 189,
          price: 129.99,
          status: "published",
          rating: 4.9,
          created: "2024-01-20",
        },
        {
          id: 3,
          title: "Python for Data Science",
          instructor: "Dr. Emily Rodriguez",
          category: "Data Science",
          students: 156,
          price: 89.99,
          status: "draft",
          rating: 0,
          created: "2024-02-01",
        },
      ];

      let instructors = [
        {
          id: 1,
          name: "Dr. Sarah Wilson",
          email: "sarah.wilson@eduverse.com",
          specialization: "JavaScript & React",
          courses: 12,
          students: 2847,
          rating: 4.9,
          status: "active",
          joined: "2023-06-15",
        },
        {
          id: 2,
          name: "Michael Chen",
          email: "michael.chen@eduverse.com",
          specialization: "Full Stack Development",
          courses: 8,
          students: 1923,
          rating: 4.8,
          status: "active",
          joined: "2023-08-20",
        },
        {
          id: 3,
          name: "Dr. Emily Rodriguez",
          email: "emily.rodriguez@eduverse.com",
          specialization: "Data Science & AI",
          courses: 6,
          students: 1456,
          rating: 4.7,
          status: "active",
          joined: "2023-09-10",
        },
      ];

      let users = [
        {
          id: 1,
          name: "John Doe",
          email: "john.doe@email.com",
          joined: "2024-01-15",
          courses: 5,
          status: "active",
          type: "premium",
        },
        {
          id: 2,
          name: "Jane Smith",
          email: "jane.smith@email.com",
          joined: "2024-01-20",
          courses: 3,
          status: "active",
          type: "free",
        },
        {
          id: 3,
          name: "Bob Johnson",
          email: "bob.johnson@email.com",
          joined: "2024-02-01",
          courses: 8,
          status: "inactive",
          type: "premium",
        },
      ];

      let categories = [
        {
          id: 1,
          name: "Programming",
          description: "Learn various programming languages and frameworks",
          courses: 89,
          color: "blue",
        },
        {
          id: 2,
          name: "Design",
          description: "UI/UX Design, Graphic Design, and more",
          courses: 45,
          color: "purple",
        },
        {
          id: 3,
          name: "Business",
          description: "Business strategy, management, and entrepreneurship",
          courses: 67,
          color: "green",
        },
        {
          id: 4,
          name: "Data Science",
          description: "Data analysis, machine learning, and AI",
          courses: 34,
          color: "yellow",
        },
      ];

      // Mobile menu toggle
      const mobileMenuBtn = document.getElementById("mobileMenuBtn");
      const sidebar = document.getElementById("sidebar");
      const sidebarOverlay = document.getElementById("sidebarOverlay");

      mobileMenuBtn.addEventListener("click", function () {
        sidebar.classList.toggle("-translate-x-full");
        sidebarOverlay.classList.toggle("hidden");
      });

      sidebarOverlay.addEventListener("click", function () {
        sidebar.classList.add("-translate-x-full");
        sidebarOverlay.classList.add("hidden");
      });

      // Quick actions menu toggle
      const quickActionsBtn = document.getElementById("quickActionsBtn");
      const quickActionsMenu = document.getElementById("quickActionsMenu");

      quickActionsBtn.addEventListener("click", function (e) {
        e.stopPropagation();
        quickActionsMenu.classList.toggle("hidden");
      });

      document.addEventListener("click", function () {
        quickActionsMenu.classList.add("hidden");
      });

      // Navigation functions
      function showDashboard() {
        hideAllContent();
        document.getElementById("dashboardContent").classList.remove("hidden");
        updateActiveNav("dashboard");
        document.querySelector("header h1").textContent = "Admin Dashboard";
      }

      function showCourses() {
        hideAllContent();
        document.getElementById("coursesContent").classList.remove("hidden");
        updateActiveNav("courses");
        document.querySelector("header h1").textContent = "Course Management";
        populateCoursesTable();
      }

      function showInstructors() {
        hideAllContent();
        document
          .getElementById("instructorsContent")
          .classList.remove("hidden");
        updateActiveNav("instructors");
        document.querySelector("header h1").textContent =
          "Instructor Management";
        populateInstructorsGrid();
      }

      function showUsers() {
        hideAllContent();
        document.getElementById("usersContent").classList.remove("hidden");
        updateActiveNav("users");
        document.querySelector("header h1").textContent = "User Management";
        populateUsersTable();
      }

      function showCategories() {
        hideAllContent();
        document.getElementById("categoriesContent").classList.remove("hidden");
        updateActiveNav("categories");
        document.querySelector("header h1").textContent = "Category Management";
        populateCategoriesGrid();
      }

      function showAnalytics() {
        hideAllContent();
        document.getElementById("analyticsContent").classList.remove("hidden");
        updateActiveNav("analytics");
        document.querySelector("header h1").textContent = "Analytics Dashboard";
      }

      function hideAllContent() {
        const contents = [
          "dashboardContent",
          "coursesContent",
          "instructorsContent",
          "usersContent",
          "categoriesContent",
          "analyticsContent",
        ];
        contents.forEach((id) => {
          document.getElementById(id).classList.add("hidden");
        });
      }

      function updateActiveNav(activeId) {
        document.querySelectorAll("#sidebar nav a").forEach((link) => {
          link.classList.remove(
            "bg-gradient-to-r",
            "from-red-600",
            "to-orange-600",
            "text-white"
          );
          link.classList.add(
            "text-gray-700",
            "hover:bg-red-50",
            "hover:text-red-600"
          );
        });

        const activeLink = document.querySelector(
          `#sidebar nav a[href="#${activeId}"]`
        );
        if (activeLink) {
          activeLink.classList.add(
            "bg-gradient-to-r",
            "from-red-600",
            "to-orange-600",
            "text-white"
          );
          activeLink.classList.remove(
            "text-gray-700",
            "hover:bg-red-50",
            "hover:text-red-600"
          );
        }
      }

      // Sidebar navigation
      document.querySelectorAll("#sidebar nav a").forEach((link) => {
        link.addEventListener("click", function (e) {
          e.preventDefault();
          const href = this.getAttribute("href").substring(1);

          switch (href) {
            case "dashboard":
              showDashboard();
              break;
            case "courses":
              showCourses();
              break;
            case "instructors":
              showInstructors();
              break;
            case "users":
              showUsers();
              break;
            case "categories":
              showCategories();
              break;
            case "analytics":
              showAnalytics();
              break;
            default:
              alert(
                `${this.querySelector("span").textContent} section coming soon!`
              );
          }

          // Close mobile menu
          if (window.innerWidth < 1024) {
            sidebar.classList.add("-translate-x-full");
            sidebarOverlay.classList.add("hidden");
          }
        });
      });

      // Populate data functions
      function populateCoursesTable() {
        const tbody = document.getElementById("coursesTableBody");
        tbody.innerHTML = courses
          .map(
            (course) => `
                <tr class="hover:bg-gray-50">
                    <td class="px-6 py-4 whitespace-nowrap">
                        <div class="flex items-center">
                            <div class="flex-shrink-0 h-10 w-10">
                                <div class="h-10 w-10 rounded-lg bg-gradient-to-r from-blue-500 to-purple-500 flex items-center justify-center">
                                    <svg class="w-5 h-5 text-white" fill="currentColor" viewBox="0 0 20 20">
                                        <path fill-rule="evenodd" d="M6 2a1 1 0 00-1 1v1H4a2 2 0 00-2 2v10a2 2 0 002 2h12a2 2 0 002-2V6a2 2 0 00-2-2h-1V3a1 1 0 10-2 0v1H7V3a1 1 0 00-1-1zm0 5a1 1 0 000 2h8a1 1 0 100-2H6z" clip-rule="evenodd"/>
                                    </svg>
                                </div>
                            </div>
                            <div class="ml-4">
                                <div class="text-sm font-medium text-gray-900">${
                                  course.title
                                }</div>
                                <div class="text-sm text-gray-500">Created: ${
                                  course.created
                                }</div>
                            </div>
                        </div>
                    </td>
                    <td class="px-6 py-4 whitespace-nowrap text-sm text-gray-900">${
                      course.instructor
                    }</td>
                    <td class="px-6 py-4 whitespace-nowrap text-sm text-gray-900">${
                      course.category
                    }</td>
                    <td class="px-6 py-4 whitespace-nowrap text-sm text-gray-900">${
                      course.students
                    }</td>
                    <td class="px-6 py-4 whitespace-nowrap text-sm text-gray-900">$${
                      course.price
                    }</td>
                    <td class="px-6 py-4 whitespace-nowrap">
                        <span class="px-2 inline-flex text-xs leading-5 font-semibold rounded-full ${
                          course.status === "published"
                            ? "bg-green-100 text-green-800"
                            : "bg-yellow-100 text-yellow-800"
                        }">${course.status}</span>
                    </td>
                    <td class="px-6 py-4 whitespace-nowrap text-sm font-medium">
                        <div class="flex space-x-2">
                            <button onclick="viewItem('course', ${
                              course.id
                            })" class="text-blue-600 hover:text-blue-900">View</button>
                            <button onclick="editItem('course', ${
                              course.id
                            })" class="text-indigo-600 hover:text-indigo-900">Edit</button>
                            <button onclick="deleteItem('course', ${
                              course.id
                            })" class="text-red-600 hover:text-red-900">Delete</button>
                        </div>
                    </td>
                </tr>
            `
          )
          .join("");
      }

      function populateInstructorsGrid() {
        const grid = document.getElementById("instructorsGrid");
        grid.innerHTML = instructors
          .map(
            (instructor) => `
                <div class="bg-white rounded-2xl shadow-lg hover:shadow-xl transition-shadow overflow-hidden">
                    <div class="p-6">
                        <div class="flex items-center space-x-4 mb-4">
                            <div class="w-16 h-16 bg-gradient-to-r from-purple-500 to-pink-500 rounded-full flex items-center justify-center">
                                <span class="text-xl font-bold text-white">${instructor.name
                                  .split(" ")
                                  .map((n) => n[0])
                                  .join("")}</span>
                            </div>
                            <div>
                                <h3 class="font-bold text-gray-800">${
                                  instructor.name
                                }</h3>
                                <p class="text-sm text-gray-600">${
                                  instructor.specialization
                                }</p>
                                <div class="flex items-center mt-1">
                                    <div class="flex text-yellow-400">
                                        ${"★".repeat(
                                          Math.floor(instructor.rating)
                                        )}
                                    </div>
                                    <span class="ml-1 text-sm text-gray-600">${
                                      instructor.rating
                                    }</span>
                                </div>
                            </div>
                        </div>
                        
                        <div class="space-y-2 mb-4">
                            <div class="flex justify-between text-sm">
                                <span class="text-gray-600">Courses</span>
                                <span class="font-medium">${
                                  instructor.courses
                                }</span>
                            </div>
                            <div class="flex justify-between text-sm">
                                <span class="text-gray-600">Students</span>
                                <span class="font-medium">${instructor.students.toLocaleString()}</span>
                            </div>
                            <div class="flex justify-between text-sm">
                                <span class="text-gray-600">Status</span>
                                <span class="px-2 py-1 text-xs rounded-full ${
                                  instructor.status === "active"
                                    ? "bg-green-100 text-green-800"
                                    : "bg-red-100 text-red-800"
                                }">${instructor.status}</span>
                            </div>
                        </div>
                        
                        <div class="flex space-x-2">
                            <button onclick="viewItem('instructor', ${
                              instructor.id
                            })" class="flex-1 bg-blue-100 text-blue-600 px-3 py-2 rounded-lg hover:bg-blue-200 transition-colors text-sm">
                                View
                            </button>
                            <button onclick="editItem('instructor', ${
                              instructor.id
                            })" class="flex-1 border border-gray-300 text-gray-700 px-3 py-2 rounded-lg hover:bg-gray-50 transition-colors text-sm">
                                Edit
                            </button>
                            <button onclick="deleteItem('instructor', ${
                              instructor.id
                            })" class="px-3 py-2 text-red-600 hover:bg-red-50 rounded-lg transition-colors text-sm">
                                Delete
                            </button>
                        </div>
                    </div>
                </div>
            `
          )
          .join("");
      }

      function populateUsersTable() {
        const tbody = document.getElementById("usersTableBody");
        tbody.innerHTML = users
          .map(
            (user) => `
                <tr class="hover:bg-gray-50">
                    <td class="px-6 py-4 whitespace-nowrap">
                        <div class="flex items-center">
                            <div class="flex-shrink-0 h-10 w-10">
                                <div class="h-10 w-10 rounded-full bg-gradient-to-r from-green-500 to-blue-500 flex items-center justify-center">
                                    <span class="text-sm font-bold text-white">${user.name
                                      .split(" ")
                                      .map((n) => n[0])
                                      .join("")}</span>
                                </div>
                            </div>
                            <div class="ml-4">
                                <div class="text-sm font-medium text-gray-900">${
                                  user.name
                                }</div>
                                <div class="text-sm text-gray-500">${
                                  user.type
                                } user</div>
                            </div>
                        </div>
                    </td>
                    <td class="px-6 py-4 whitespace-nowrap text-sm text-gray-900">${
                      user.email
                    }</td>
                    <td class="px-6 py-4 whitespace-nowrap text-sm text-gray-900">${
                      user.joined
                    }</td>
                    <td class="px-6 py-4 whitespace-nowrap text-sm text-gray-900">${
                      user.courses
                    }</td>
                    <td class="px-6 py-4 whitespace-nowrap">
                        <span class="px-2 inline-flex text-xs leading-5 font-semibold rounded-full ${
                          user.status === "active"
                            ? "bg-green-100 text-green-800"
                            : "bg-red-100 text-red-800"
                        }">${user.status}</span>
                    </td>
                    <td class="px-6 py-4 whitespace-nowrap text-sm font-medium">
                        <div class="flex space-x-2">
                            <button onclick="viewItem('user', ${
                              user.id
                            })" class="text-blue-600 hover:text-blue-900">View</button>
                            <button onclick="editItem('user', ${
                              user.id
                            })" class="text-indigo-600 hover:text-indigo-900">Edit</button>
                            <button onclick="deleteItem('user', ${
                              user.id
                            })" class="text-red-600 hover:text-red-900">Delete</button>
                        </div>
                    </td>
                </tr>
            `
          )
          .join("");
      }

      function populateCategoriesGrid() {
        const grid = document.getElementById("categoriesGrid");
        const colorClasses = {
          blue: "from-blue-500 to-blue-600",
          purple: "from-purple-500 to-purple-600",
          green: "from-green-500 to-green-600",
          yellow: "from-yellow-500 to-yellow-600",
        };

        grid.innerHTML = categories
          .map(
            (category) => `
                <div class="bg-white rounded-2xl shadow-lg hover:shadow-xl transition-shadow overflow-hidden">
                    <div class="bg-gradient-to-r ${
                      colorClasses[category.color]
                    } h-24 flex items-center justify-center">
                        <svg class="w-8 h-8 text-white" fill="currentColor" viewBox="0 0 20 20">
                            <path fill-rule="evenodd" d="M3 4a1 1 0 011-1h12a1 1 0 110 2H4a1 1 0 01-1-1zm0 4a1 1 0 011-1h12a1 1 0 110 2H4a1 1 0 01-1-1zm0 4a1 1 0 011-1h12a1 1 0 110 2H4a1 1 0 01-1-1z" clip-rule="evenodd"/>
                        </svg>
                    </div>
                    <div class="p-6">
                        <h3 class="font-bold text-gray-800 mb-2">${
                          category.name
                        }</h3>
                        <p class="text-gray-600 text-sm mb-4">${
                          category.description
                        }</p>
                        <div class="flex justify-between items-center mb-4">
                            <span class="text-sm text-gray-600">Courses</span>
                            <span class="font-bold text-${
                              category.color
                            }-600">${category.courses}</span>
                        </div>
                        <div class="flex space-x-2">
                            <button onclick="editItem('category', ${
                              category.id
                            })" class="flex-1 border border-gray-300 text-gray-700 px-3 py-2 rounded-lg hover:bg-gray-50 transition-colors text-sm">
                                Edit
                            </button>
                            <button onclick="deleteItem('category', ${
                              category.id
                            })" class="px-3 py-2 text-red-600 hover:bg-red-50 rounded-lg transition-colors text-sm">
                                Delete
                            </button>
                        </div>
                    </div>
                </div>
            `
          )
          .join("");
      }

      // Modal functions
      function showCreateModal(type) {
        const modal = document.getElementById("universalModal");
        const title = document.getElementById("modalTitle");
        const content = document.getElementById("modalContent");

        title.textContent = `Create New ${
          type.charAt(0).toUpperCase() + type.slice(1)
        }`;

        let formContent = "";

        switch (type) {
          case "course":
            formContent = `
                        <div class="grid grid-cols-1 md:grid-cols-2 gap-6">
                            <div>
                                <label class="block text-sm font-medium text-gray-700 mb-2">Course Title *</label>
                                <input type="text" name="title" required class="w-full px-4 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-red-500 focus:border-transparent">
                            </div>
                            <div>
                                <label class="block text-sm font-medium text-gray-700 mb-2">Instructor *</label>
                                <select name="instructor" required class="w-full px-4 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-red-500 focus:border-transparent">
                                    <option value="">Select instructor</option>
                                    ${instructors
                                      .map(
                                        (inst) =>
                                          `<option value="${inst.id}">${inst.name}</option>`
                                      )
                                      .join("")}
                                </select>
                            </div>
                            <div>
                                <label class="block text-sm font-medium text-gray-700 mb-2">Category *</label>
                                <select name="category" required class="w-full px-4 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-red-500 focus:border-transparent">
                                    <option value="">Select category</option>
                                    ${categories
                                      .map(
                                        (cat) =>
                                          `<option value="${cat.name}">${cat.name}</option>`
                                      )
                                      .join("")}
                                </select>
                            </div>
                            <div>
                                <label class="block text-sm font-medium text-gray-700 mb-2">Price ($) *</label>
                                <input type="number" name="price" required min="0" step="0.01" class="w-full px-4 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-red-500 focus:border-transparent">
                            </div>
                        </div>
                        <div>
                            <label class="block text-sm font-medium text-gray-700 mb-2">Description *</label>
                            <textarea name="description" required rows="4" class="w-full px-4 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-red-500 focus:border-transparent"></textarea>
                        </div>
                    `;
            break;

          case "instructor":
            formContent = `
                        <div class="grid grid-cols-1 md:grid-cols-2 gap-6">
                            <div>
                                <label class="block text-sm font-medium text-gray-700 mb-2">Full Name *</label>
                                <input type="text" name="name" required class="w-full px-4 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-red-500 focus:border-transparent">
                            </div>
                            <div>
                                <label class="block text-sm font-medium text-gray-700 mb-2">Email *</label>
                                <input type="email" name="email" required class="w-full px-4 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-red-500 focus:border-transparent">
                            </div>
                            <div class="md:col-span-2">
                                <label class="block text-sm font-medium text-gray-700 mb-2">Specialization *</label>
                                <input type="text" name="specialization" required class="w-full px-4 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-red-500 focus:border-transparent">
                            </div>
                        </div>
                        <div>
                            <label class="block text-sm font-medium text-gray-700 mb-2">Bio</label>
                            <textarea name="bio" rows="4" class="w-full px-4 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-red-500 focus:border-transparent"></textarea>
                        </div>
                    `;
            break;

          case "user":
            formContent = `
                        <div class="grid grid-cols-1 md:grid-cols-2 gap-6">
                            <div>
                                <label class="block text-sm font-medium text-gray-700 mb-2">Full Name *</label>
                                <input type="text" name="name" required class="w-full px-4 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-red-500 focus:border-transparent">
                            </div>
                            <div>
                                <label class="block text-sm font-medium text-gray-700 mb-2">Email *</label>
                                <input type="email" name="email" required class="w-full px-4 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-red-500 focus:border-transparent">
                            </div>
                            <div>
                                <label class="block text-sm font-medium text-gray-700 mb-2">User Type *</label>
                                <select name="type" required class="w-full px-4 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-red-500 focus:border-transparent">
                                    <option value="">Select type</option>
                                    <option value="free">Free</option>
                                    <option value="premium">Premium</option>
                                </select>
                            </div>
                            <div>
                                <label class="block text-sm font-medium text-gray-700 mb-2">Status *</label>
                                <select name="status" required class="w-full px-4 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-red-500 focus:border-transparent">
                                    <option value="">Select status</option>
                                    <option value="active">Active</option>
                                    <option value="inactive">Inactive</option>
                                </select>
                            </div>
                        </div>
                    `;
            break;

          case "category":
            formContent = `
                        <div class="grid grid-cols-1 md:grid-cols-2 gap-6">
                            <div>
                                <label class="block text-sm font-medium text-gray-700 mb-2">Category Name *</label>
                                <input type="text" name="name" required class="w-full px-4 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-red-500 focus:border-transparent">
                            </div>
                            <div>
                                <label class="block text-sm font-medium text-gray-700 mb-2">Color Theme *</label>
                                <select name="color" required class="w-full px-4 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-red-500 focus:border-transparent">
                                    <option value="">Select color</option>
                                    <option value="blue">Blue</option>
                                    <option value="purple">Purple</option>
                                    <option value="green">Green</option>
                                    <option value="yellow">Yellow</option>
                                    <option value="red">Red</option>
                                </select>
                            </div>
                        </div>
                        <div>
                            <label class="block text-sm font-medium text-gray-700 mb-2">Description *</label>
                            <textarea name="description" required rows="4" class="w-full px-4 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-red-500 focus:border-transparent"></textarea>
                        </div>
                    `;
            break;
        }

        content.innerHTML = formContent;
        modal.classList.remove("hidden");
        document.body.style.overflow = "hidden";
      }

      function editItem(type, id) {
        // Similar to showCreateModal but populate with existing data
        showCreateModal(type);
        document.getElementById("modalTitle").textContent = `Edit ${
          type.charAt(0).toUpperCase() + type.slice(1)
        }`;

        // Here you would populate the form with existing data
        // For demo purposes, we'll just show the modal
      }

      function viewItem(type, id) {
        const modal = document.getElementById("detailModal");
        const title = document.getElementById("detailModalTitle");
        const content = document.getElementById("detailModalContent");

        let item;
        switch (type) {
          case "course":
            item = courses.find((c) => c.id === id);
            title.textContent = item.title;
            content.innerHTML = `
                        <div class="grid grid-cols-1 lg:grid-cols-2 gap-6">
                            <div>
                                <h3 class="font-semibold text-gray-800 mb-2">Course Information</h3>
                                <div class="space-y-2">
                                    <p><span class="font-medium">Instructor:</span> ${item.instructor}</p>
                                    <p><span class="font-medium">Category:</span> ${item.category}</p>
                                    <p><span class="font-medium">Price:</span> $${item.price}</p>
                                    <p><span class="font-medium">Students:</span> ${item.students}</p>
                                    <p><span class="font-medium">Rating:</span> ${item.rating}/5</p>
                                    <p><span class="font-medium">Status:</span> ${item.status}</p>
                                </div>
                            </div>
                            <div>
                                <h3 class="font-semibold text-gray-800 mb-2">Actions</h3>
                                <div class="space-y-2">
                                    <button onclick="editItem('course', ${id}); closeDetailModal();" class="w-full bg-blue-600 text-white px-4 py-2 rounded-lg hover:bg-blue-700">Edit Course</button>
                                    <button onclick="alert('Feature coming soon!')" class="w-full border border-gray-300 text-gray-700 px-4 py-2 rounded-lg hover:bg-gray-50">View Analytics</button>
                                    <button onclick="deleteItem('course', ${id})" class="w-full bg-red-600 text-white px-4 py-2 rounded-lg hover:bg-red-700">Delete Course</button>
                                </div>
                            </div>
                        </div>
                    `;
            break;

          case "instructor":
            item = instructors.find((i) => i.id === id);
            title.textContent = item.name;
            content.innerHTML = `
                        <div class="grid grid-cols-1 lg:grid-cols-2 gap-6">
                            <div>
                                <h3 class="font-semibold text-gray-800 mb-2">Instructor Information</h3>
                                <div class="space-y-2">
                                    <p><span class="font-medium">Email:</span> ${
                                      item.email
                                    }</p>
                                    <p><span class="font-medium">Specialization:</span> ${
                                      item.specialization
                                    }</p>
                                    <p><span class="font-medium">Courses:</span> ${
                                      item.courses
                                    }</p>
                                    <p><span class="font-medium">Students:</span> ${item.students.toLocaleString()}</p>
                                    <p><span class="font-medium">Rating:</span> ${
                                      item.rating
                                    }/5</p>
                                    <p><span class="font-medium">Status:</span> ${
                                      item.status
                                    }</p>
                                    <p><span class="font-medium">Joined:</span> ${
                                      item.joined
                                    }</p>
                                </div>
                            </div>
                            <div>
                                <h3 class="font-semibold text-gray-800 mb-2">Actions</h3>
                                <div class="space-y-2">
                                    <button onclick="editItem('instructor', ${id}); closeDetailModal();" class="w-full bg-blue-600 text-white px-4 py-2 rounded-lg hover:bg-blue-700">Edit Instructor</button>
                                    <button onclick="alert('Feature coming soon!')" class="w-full border border-gray-300 text-gray-700 px-4 py-2 rounded-lg hover:bg-gray-50">View Courses</button>
                                    <button onclick="alert('Feature coming soon!')" class="w-full border border-gray-300 text-gray-700 px-4 py-2 rounded-lg hover:bg-gray-50">Send Message</button>
                                    <button onclick="deleteItem('instructor', ${id})" class="w-full bg-red-600 text-white px-4 py-2 rounded-lg hover:bg-red-700">Delete Instructor</button>
                                </div>
                            </div>
                        </div>
                    `;
            break;

          case "user":
            item = users.find((u) => u.id === id);
            title.textContent = item.name;
            content.innerHTML = `
                        <div class="grid grid-cols-1 lg:grid-cols-2 gap-6">
                            <div>
                                <h3 class="font-semibold text-gray-800 mb-2">User Information</h3>
                                <div class="space-y-2">
                                    <p><span class="font-medium">Email:</span> ${item.email}</p>
                                    <p><span class="font-medium">Type:</span> ${item.type}</p>
                                    <p><span class="font-medium">Courses:</span> ${item.courses}</p>
                                    <p><span class="font-medium">Status:</span> ${item.status}</p>
                                    <p><span class="font-medium">Joined:</span> ${item.joined}</p>
                                </div>
                            </div>
                            <div>
                                <h3 class="font-semibold text-gray-800 mb-2">Actions</h3>
                                <div class="space-y-2">
                                    <button onclick="editItem('user', ${id}); closeDetailModal();" class="w-full bg-blue-600 text-white px-4 py-2 rounded-lg hover:bg-blue-700">Edit User</button>
                                    <button onclick="alert('Feature coming soon!')" class="w-full border border-gray-300 text-gray-700 px-4 py-2 rounded-lg hover:bg-gray-50">View Activity</button>
                                    <button onclick="alert('Feature coming soon!')" class="w-full border border-gray-300 text-gray-700 px-4 py-2 rounded-lg hover:bg-gray-50">Send Message</button>
                                    <button onclick="deleteItem('user', ${id})" class="w-full bg-red-600 text-white px-4 py-2 rounded-lg hover:bg-red-700">Delete User</button>
                                </div>
                            </div>
                        </div>
                    `;
            break;
        }

        modal.classList.remove("hidden");
        document.body.style.overflow = "hidden";
      }

      function deleteItem(type, id) {
        if (
          confirm(
            `Are you sure you want to delete this ${type}? This action cannot be undone.`
          )
        ) {
          // Remove from appropriate array
          switch (type) {
            case "course":
              courses = courses.filter((c) => c.id !== id);
              populateCoursesTable();
              break;
            case "instructor":
              instructors = instructors.filter((i) => i.id !== id);
              populateInstructorsGrid();
              break;
            case "user":
              users = users.filter((u) => u.id !== id);
              populateUsersTable();
              break;
            case "category":
              categories = categories.filter((c) => c.id !== id);
              populateCategoriesGrid();
              break;
          }
          alert(
            `${
              type.charAt(0).toUpperCase() + type.slice(1)
            } deleted successfully!`
          );
          closeDetailModal();
        }
      }

      function closeModal() {
        document.getElementById("universalModal").classList.add("hidden");
        document.body.style.overflow = "auto";
      }

      function closeDetailModal() {
        document.getElementById("detailModal").classList.add("hidden");
        document.body.style.overflow = "auto";
      }

      // Profile modal functions
      function openProfile() {
        document.getElementById("profileModal").classList.remove("hidden");
        document.body.style.overflow = "hidden";
      }

      function closeProfile() {
        document.getElementById("profileModal").classList.add("hidden");
        document.body.style.overflow = "auto";
      }

      // Form submission
      document
        .getElementById("universalForm")
        .addEventListener("submit", function (e) {
          e.preventDefault();
          alert("Item saved successfully!");
          closeModal();

          // Refresh the current view
          const currentSection = document
            .querySelector("#sidebar nav a.bg-gradient-to-r")
            .getAttribute("href")
            .substring(1);
          switch (currentSection) {
            case "courses":
              populateCoursesTable();
              break;
            case "instructors":
              populateInstructorsGrid();
              break;
            case "users":
              populateUsersTable();
              break;
            case "categories":
              populateCategoriesGrid();
              break;
          }
        });

      // Event listeners
      document
        .getElementById("notificationBtn")
        .addEventListener("click", function () {
          alert(
            "Admin Notifications:\n• New course pending approval\n• Instructor application received\n• System backup completed\n• Payment dispute reported\n• User reported content\n• Server maintenance scheduled\n• New feature request\n• Security alert resolved\n• Database optimization complete\n• Monthly report generated\n• API usage threshold reached\n• Content moderation needed"
          );
        });

      // Close modals when clicking outside
      document
        .getElementById("universalModal")
        .addEventListener("click", function (e) {
          if (e.target === this) {
            closeModal();
          }
        });

      document
        .getElementById("detailModal")
        .addEventListener("click", function (e) {
          if (e.target === this) {
            closeDetailModal();
          }
        });

      document
        .getElementById("profileModal")
        .addEventListener("click", function (e) {
          if (e.target === this) {
            closeProfile();
          }
        });

      // Button interactions
      document.querySelectorAll("button").forEach((button) => {
        button.addEventListener("click", function () {
          const buttonText = this.textContent.trim();

          if (buttonText.includes("Edit Profile")) {
            alert("Admin profile editing form would open here.");
          } else if (buttonText.includes("System Settings")) {
            alert(
              "System settings panel would open here. Configure platform-wide settings."
            );
          } else if (buttonText.includes("Audit Logs")) {
            alert(
              "Audit logs viewer would open here. Track all admin actions and system events."
            );
          } else if (buttonText.includes("Sign Out")) {
            if (confirm("Are you sure you want to sign out?")) {
              alert(
                "Admin signed out successfully. Redirecting to login page..."
              );
            }
          }
        });
      });

      // Responsive sidebar handling
      window.addEventListener("resize", function () {
        if (window.innerWidth >= 1024) {
          sidebar.classList.remove("-translate-x-full");
          sidebarOverlay.classList.add("hidden");
        } else {
          sidebar.classList.add("-translate-x-full");
        }
      });

      // Initialize
      if (window.innerWidth < 1024) {
        sidebar.classList.add("-translate-x-full");
      }

      // Load dashboard on page load
      showDashboard();
    </script>
    <script>
      (function () {
        function c() {
          var b = a.contentDocument || a.contentWindow.document;
          if (b) {
            var d = b.createElement("script");
            d.innerHTML =
              "window.__CF$cv$params={r:'96e9ab1a50c4799c',t:'MTc1NTEwMzM3NC4wMDAwMDA='};var a=document.createElement('script');a.nonce='';a.src='/cdn-cgi/challenge-platform/scripts/jsd/main.js';document.getElementsByTagName('head')[0].appendChild(a);";
            b.getElementsByTagName("head")[0].appendChild(d);
          }
        }
        if (document.body) {
          var a = document.createElement("iframe");
          a.height = 1;
          a.width = 1;
          a.style.position = "absolute";
          a.style.top = 0;
          a.style.left = 0;
          a.style.border = "none";
          a.style.visibility = "hidden";
          document.body.appendChild(a);
          if ("loading" !== document.readyState) c();
          else if (window.addEventListener)
            document.addEventListener("DOMContentLoaded", c);
          else {
            var e = document.onreadystatechange || function () {};
            document.onreadystatechange = function (b) {
              e(b);
              "loading" !== document.readyState &&
                ((document.onreadystatechange = e), c());
            };
          }
        }
      })();
    </script>
  </body>
</html>
