<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title><%= title %></title>
    <script src="https://cdn.tailwindcss.com"></script>
    <script>
      tailwind.config = {
        theme: {
          extend: {
            colors: {
              "blue-950": "#1e3a8a",
            },
          },
        },
      };
    </script>
  </head>
  <body class="bg-gradient-to-br from-blue-50 to-indigo-100 min-h-screen">
    <!-- Sidebar -->
    <div
      id="sidebar"
      class="fixed left-0 top-0 h-full w-64 bg-white shadow-xl z-40 transform transition-transform duration-300"
    >
      <!-- Logo -->
      <div class="p-6 border-b border-gray-200">
        <div class="flex items-center space-x-3">
          <div
            class="bg-gradient-to-r from-blue-600 to-indigo-600 p-2 rounded-lg"
          >
            <svg
              class="w-8 h-8 text-white"
              fill="currentColor"
              viewBox="0 0 20 20"
            >
              <path
                d="M10.394 2.08a1 1 0 00-.788 0l-7 3a1 1 0 000 1.84L5.25 8.051a.999.999 0 01.356-.257l4-1.714a1 1 0 11.788 1.838L7.667 9.088l1.94.831a1 1 0 00.787 0l7-3a1 1 0 000-1.838l-7-3zM3.31 9.397L5 10.12v4.102a8.969 8.969 0 00-1.05-.174 1 1 0 01-.89-.89 11.115 11.115 0 01.25-3.762zM9.3 16.573A9.026 9.026 0 007 14.935v-3.957l1.818.78a3 3 0 002.364 0l5.508-2.361a11.026 11.026 0 01.25 3.762 1 1 0 01-.89.89 8.968 8.968 0 00-5.35 2.524 1 1 0 01-1.4 0zM6 18a1 1 0 001-1v-2.065a8.935 8.935 0 00-2-.712V17a1 1 0 001 1z"
              />
            </svg>
          </div>
          <span
            class="text-xl font-bold bg-gradient-to-r from-blue-600 to-indigo-600 bg-clip-text text-transparent"
            >EduVerse</span
          >
        </div>
        <p class="text-sm text-gray-600 mt-1">Student Portal</p>
      </div>

      <!-- Navigation Menu -->
      <nav class="p-4">
        <ul class="space-y-2">
          <li>
            <a
              href="/student/dashboard"
              class="flex items-center space-x-3 px-4 py-3 rounded-lg text-gray-700 hover:bg-blue-50 hover:text-blue-600 transition-all"
            >
              <svg class="w-5 h-5" fill="currentColor" viewBox="0 0 20 20">
                <path
                  d="M10.707 2.293a1 1 0 00-1.414 0l-7 7a1 1 0 001.414 1.414L4 10.414V17a1 1 0 001 1h2a1 1 0 001-1v-2a1 1 0 011-1h2a1 1 0 011 1v2a1 1 0 001 1h2a1 1 0 001-1v-6.586l.293.293a1 1 0 001.414-1.414l-7-7z"
                />
              </svg>
              <span>Dashboard</span>
            </a>
          </li>
          <li>
            <a
              href="/student/mycourses"
              class="flex items-center space-x-3 px-4 py-3 rounded-lg text-gray-700 hover:bg-blue-50 hover:text-blue-600 transition-all"
            >
              <svg class="w-5 h-5" fill="currentColor" viewBox="0 0 20 20">
                <path
                  fill-rule="evenodd"
                  d="M6 2a1 1 0 00-1 1v1H4a2 2 0 00-2 2v10a2 2 0 002 2h12a2 2 0 002-2V6a2 2 0 00-2-2h-1V3a1 1 0 10-2 0v1H7V3a1 1 0 00-1-1zm0 5a1 1 0 000 2h8a1 1 0 100-2H6z"
                  clip-rule="evenodd"
                />
              </svg>
              <span>My Courses</span>
            </a>
          </li>
        </ul>
      </nav>
    </div>

    <!-- Main Content -->
    <div class="lg:ml-64">
      <!-- Top Header -->
      <header
        class="bg-white/90 backdrop-blur-sm shadow-sm border-b border-gray-200 sticky top-0 z-20"
      >
        <div class="px-6 py-4">
          <div class="flex items-center justify-between">
            <!-- Mobile Menu Button -->
            <button
              id="mobileMenuBtn"
              class="lg:hidden p-2 rounded-lg hover:bg-gray-100"
            >
              <svg
                class="w-6 h-6"
                fill="none"
                stroke="currentColor"
                viewBox="0 0 24 24"
              >
                <path
                  stroke-linecap="round"
                  stroke-linejoin="round"
                  stroke-width="2"
                  d="M4 6h16M4 12h16M4 18h16"
                />
              </svg>
            </button>

            <!-- Page Title -->
            <div class="flex-1 lg:flex-none">
              <h1 class="text-2xl font-bold text-gray-800" id="pageTitle">Dashboard</h1>
            </div>

            <!-- Header Actions -->
            <div class="flex items-center space-x-4">
              <!-- Notifications -->
              <button
                id="notificationBtn"
                class="relative p-2 text-gray-600 hover:text-blue-600 hover:bg-blue-50 rounded-lg transition-all"
              >
                <svg
                  xmlns="http://www.w3.org/2000/svg"
                  width="20"
                  height="20"
                  fill="currentColor"
                  class="bi bi-bell-fill w-6 h-6"
                  viewBox="0 0 16 16"
                >
                  <path
                    d="M8 16a2 2 0 0 0 2-2H6a2 2 0 0 0 2 2m.995-14.901a1 1 0 1 0-1.99 0A5 5 0 0 0 3 6c0 1.098-.5 6-2 7h14c-1.5-1-2-5.902-2-7 0-2.42-1.72-4.44-4.005-4.901"
                  />
                </svg>
                <span
                  class="absolute -top-1 -right-1 bg-red-500 text-white text-xs rounded-full w-5 h-5 flex items-center justify-center"
                  >3</span
                >
              </button>

              <!-- Profile Button -->
              <button
                onclick="openProfile()"
                class="flex items-center space-x-3 p-2 rounded-lg hover:bg-gray-100 transition-all"
              >
                <div class="w-8 h-8 bg-gradient-to-r from-blue-600 to-indigo-600 rounded-full flex items-center justify-center text-white font-medium" id="headerStudentInitials">
                  <% 
                    let studentName = '';
                    let studentEmail = '';
                    let studentInitials = 'ST';
                    
                    if (typeof student !== 'undefined' && student && student.name) {
                      studentName = student.name;
                      studentEmail = student.email || 'student@example.com';
                      studentInitials = student.name.split(' ').map(n => n.charAt(0).toUpperCase()).join('').substring(0, 2);
                    } else if (typeof user !== 'undefined' && user && user.name) {
                      studentName = user.name;
                      studentEmail = user.email || 'student@example.com';
                      studentInitials = user.name.split(' ').map(n => n.charAt(0).toUpperCase()).join('').substring(0, 2);
                    } else {
                      studentName = 'Student';
                      studentEmail = 'student@example.com';
                      studentInitials = 'ST';
                    }
                  %>
                  <%= studentInitials %>
                </div>
                <div class="hidden md:block text-left">
                  <div class="text-sm font-medium text-gray-900" id="headerStudentName"><%= studentName %></div>
                  <div class="text-xs text-gray-500" id="headerStudentEmail"><%= studentEmail %></div>
                </div>
              </button>
            </div>
          </div>
        </div>
      </header>

      <!-- Page Content -->
      <main class="p-6">
        <%- body %>
      </main>
    </div>

    <!-- Profile Modal -->
    <div
      id="profileModal"
      class="fixed inset-0 bg-black bg-opacity-50 hidden z-50 flex items-center justify-center p-4"
    >
      <div class="bg-white rounded-2xl max-w-md w-full">
        <div class="p-6">
          <div class="flex items-center justify-between mb-6">
            <h2 class="text-xl font-bold text-gray-800">Profile Menu</h2>
            <button
              onclick="closeProfile()"
              class="text-gray-500 hover:text-gray-700"
            >
              <svg
                class="w-6 h-6"
                fill="none"
                stroke="currentColor"
                viewBox="0 0 24 24"
              >
                <path
                  stroke-linecap="round"
                  stroke-linejoin="round"
                  stroke-width="2"
                  d="M6 18L18 6M6 6l12 12"
                />
              </svg>
            </button>
          </div>

          <!-- Profile Info -->
          <div class="text-center mb-6">
            <div class="w-20 h-20 bg-gradient-to-r from-blue-600 to-indigo-600 rounded-full flex items-center justify-center mx-auto mb-4" id="modalStudentAvatar">
              <span class="text-2xl font-bold text-white"><%= studentInitials %></span>
            </div>
            <h3 class="text-xl font-bold text-gray-800" id="modalStudentName"><%= studentName %></h3>
            <p class="text-gray-600" id="modalStudentEmail"><%= studentEmail %></p>
            <div class="flex items-center justify-center mt-2">
              <span class="inline-block px-3 py-1 text-sm bg-blue-100 text-blue-800 rounded-full">
                Student
              </span>
            </div>
            <% if (typeof student !== 'undefined' && student && student.plan) { %>
            <div class="mt-2">
              <span class="inline-block px-2 py-1 text-xs bg-green-100 text-green-800 rounded-full">
                <%= student.plan %>
              </span>
            </div>
            <% } %>
          </div>

          <!-- Profile Actions -->
          <div class="space-y-2">
            <a
              href="/student/profile/edit"
              class="w-full text-left px-4 py-3 rounded-lg hover:bg-gray-50 transition-colors flex items-center space-x-3"
            >
              <svg
                class="w-5 h-5 text-gray-600"
                fill="none"
                stroke="currentColor"
                viewBox="0 0 24 24"
              >
                <path
                  stroke-linecap="round"
                  stroke-linejoin="round"
                  stroke-width="2"
                  d="M16 7a4 4 0 11-8 0 4 4 0 018 0zM12 14a7 7 0 00-7 7h14a7 7 0 00-7-7z"
                />
              </svg>
              <span>Edit Profile</span>
            </a>

            <a
              href="/student/settings"
              class="w-full text-left px-4 py-3 rounded-lg hover:bg-gray-50 transition-colors flex items-center space-x-3"
            >
              <svg
                class="w-5 h-5 text-gray-600"
                fill="none"
                stroke="currentColor"
                viewBox="0 0 24 24"
              >
                <path
                  stroke-linecap="round"
                  stroke-linejoin="round"
                  stroke-width="2"
                  d="M10.325 4.317c.426-1.756 2.924-1.756 3.35 0a1.724 1.724 0 002.573 1.066c1.543-.94 3.31.826 2.37 2.37a1.724 1.724 0 001.065 2.572c1.756.426 1.756 2.924 0 3.35a1.724 1.724 0 00-1.066 2.573c.94 1.543-.826 3.31-2.37 2.37a1.724 1.724 0 00-2.572 1.065c-.426 1.756-2.924 1.756-3.35 0a1.724 1.724 0 00-2.573-1.066c-1.543.94-3.31-.826-2.37-2.37a1.724 1.724 0 00-1.065-2.572c-1.756-.426-1.756-2.924 0-3.35a1.724 1.724 0 001.066-2.573c-.94-1.543.826-3.31 2.37-2.37.996.608 2.296.07 2.572-1.065z"
                />
                <path
                  stroke-linecap="round"
                  stroke-linejoin="round"
                  stroke-width="2"
                  d="M15 12a3 3 0 11-6 0 3 3 0 016 0z"
                />
              </svg>
              <span>Settings</span>
            </a>

            <a
              href="/student/notifications"
              class="w-full text-left px-4 py-3 rounded-lg hover:bg-gray-50 transition-colors flex items-center space-x-3"
            >
              <svg
                class="w-5 h-5 text-gray-600"
                fill="none"
                stroke="currentColor"
                viewBox="0 0 24 24"
              >
                <path
                  stroke-linecap="round"
                  stroke-linejoin="round"
                  stroke-width="2"
                  d="M15 17h5l-5 5v-5zM4.5 19.5a1.5 1.5 0 01-1.5-1.5V6a1.5 1.5 0 011.5-1.5h9a1.5 1.5 0 011.5 1.5v12a1.5 1.5 0 01-1.5 1.5h-9z"
                />
              </svg>
              <span>Notifications</span>
            </a>

            <hr class="my-2" />

            <button
              onclick="signOut()"
              class="w-full text-left px-4 py-3 rounded-lg hover:bg-red-50 transition-colors flex items-center space-x-3 text-red-600"
            >
              <svg
                class="w-5 h-5"
                fill="none"
                stroke="currentColor"
                viewBox="0 0 24 24"
              >
                <path
                  stroke-linecap="round"
                  stroke-linejoin="round"
                  stroke-width="2"
                  d="M17 16l4-4m0 0l-4-4m4 4H7m6 4v1a3 3 0 01-3 3H6a3 3 0 01-3-3V7a3 3 0 013-3h4a3 3 0 013 3v1"
                />
              </svg>
              <span>Sign Out</span>
            </button>
          </div>
        </div>
      </div>
    </div>

    <!-- JavaScript -->
    <script>
      // Mobile menu toggle
      const mobileMenuBtn = document.getElementById("mobileMenuBtn");
      const sidebar = document.getElementById("sidebar");
      const sidebarOverlay = document.getElementById("sidebarOverlay");

      mobileMenuBtn.addEventListener("click", function () {
        sidebar.classList.toggle("-translate-x-full");
        sidebarOverlay.classList.toggle("hidden");
      });

      sidebarOverlay.addEventListener("click", function () {
        sidebar.classList.add("-translate-x-full");
        sidebarOverlay.classList.add("hidden");
      });

      // Profile modal functions
      function openProfile() {
        document.getElementById("profileModal").classList.remove("hidden");
        document.body.style.overflow = "hidden";
      }

      function closeProfile() {
        document.getElementById("profileModal").classList.add("hidden");
        document.body.style.overflow = "auto";
      }

      // Function to generate initials from name
      function generateInitials(name) {
        if (!name) return 'ST';
        return name.split(' ')
          .map(n => n.charAt(0).toUpperCase())
          .join('')
          .substring(0, 2);
      }

      // Sign out function
      function signOut() {
        if (confirm('Are you sure you want to sign out?')) {
          window.location.href = '/signout';
        }
      }

      // Close modal when clicking outside
      document.getElementById('profileModal').addEventListener('click', function(e) {
        if (e.target === this) {
          closeProfile();
        }
      });

      // Update page title based on current page
      function updatePageTitle() {
        const path = window.location.pathname;
        const titleElement = document.getElementById('pageTitle');
        
        if (path.includes('/dashboard')) {
          titleElement.textContent = 'Dashboard';
        } else if (path.includes('/mycourses') || path.includes('/courses')) {
          titleElement.textContent = 'My Courses';
        } else if (path.includes('/instructors')) {
          titleElement.textContent = 'Instructors';
        } else if (path.includes('/profile')) {
          titleElement.textContent = 'Profile';
        } else if (path.includes('/settings')) {
          titleElement.textContent = 'Settings';
        } else {
          titleElement.textContent = 'Student Portal';
        }
      }

      // Initialize page title
      document.addEventListener('DOMContentLoaded', updatePageTitle);

      // Debug: Log session data
      console.log('Session user data:', {
        user: '<%= JSON.stringify(user) %>',
        student: '<%= typeof student !== "undefined" ? JSON.stringify(student) : "undefined" %>'
      });
    </script>
  </body>
</html>