<!-- Courses Management Content -->
<div id="coursesContent">
        <div class="flex items-center justify-between mb-6">
          <h2 class="text-2xl font-bold text-gray-800">My Courses</h2>
          <a href="/instructor/courses/create" class="bg-gradient-to-r from-purple-600 to-pink-600 text-white px-6 py-2 rounded-lg hover:from-purple-700 hover:to-pink-700 transition-all flex items-center space-x-2">
            <svg class="w-4 h-4" fill="currentColor" viewBox="0 0 20 20">
              <path
                fill-rule="evenodd"
                d="M10 3a1 1 0 011 1v5h5a1 1 0 110 2h-5v5a1 1 0 11-2 0v-5H4a1 1 0 110-2h5V4a1 1 0 011-1z"
                clip-rule="evenodd"
              />
            </svg>
            <span>Create New Course</span>
          </a>
        </div>

        <!-- Course Filters -->
        <div class="bg-white rounded-lg p-4 mb-6 shadow-sm">
          <div class="flex flex-wrap gap-4 items-center">
                         <div class="flex space-x-2">
               <button
                 onclick="filterCourses('all')"
                 id="filter-all"
                 class="px-4 py-2 bg-purple-100 text-purple-600 rounded-lg font-medium text-sm filter-btn active"
               >
                 All Courses
               </button>
               <button
                 onclick="filterCourses('published')"
                 id="filter-published"
                 class="px-4 py-2 text-gray-600 hover:bg-gray-100 rounded-lg text-sm filter-btn"
               >
                 Published
               </button>
               <button
                 onclick="filterCourses('draft')"
                 id="filter-draft"
                 class="px-4 py-2 text-gray-600 hover:bg-gray-100 rounded-lg text-sm filter-btn"
               >
                 Draft
               </button>

            </div>
            <div class="flex-1"></div>
            <div class="relative">
              <input
                type="text"
                id="coursesSearchInput"
                placeholder="Search courses by title, category, difficulty, or status..."
                class="pl-10 pr-4 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-purple-500 focus:border-transparent"
              />
              <svg
                class="w-4 h-4 text-gray-400 absolute left-3 top-3"
                fill="none"
                stroke="currentColor"
                viewBox="0 0 24 24"
              >
                <path
                  stroke-linecap="round"
                  stroke-linejoin="round"
                  stroke-width="2"
                  d="M21 21l-6-6m2-5a7 7 0 11-14 0 7 7 0 0114 0z"
                />
              </svg>
            </div>
          </div>
        </div>



        <!-- Courses Grid -->
        <div
          class="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6"
          id="coursesGrid"
        >
          <% if (courses && courses.length > 0) { %>
            <% courses.forEach(course => { %>
              <div class="bg-white rounded-2xl shadow-lg hover:shadow-xl transition-shadow overflow-hidden course-card"
                   data-title="<%= course.title.toLowerCase() %>"
                   data-category="<%= (course.category_display_name || course.category_name || '').toLowerCase() %>"
                   data-difficulty="<%= (course.difficulty_name || '').toLowerCase() %>"
                   data-status="<%= (course.status || '').toLowerCase() %>"
                   data-description="<%= (course.description || '').toLowerCase() %>">
                <div class="bg-gradient-to-r from-purple-500 to-pink-500 h-32 flex items-center justify-center relative">
                  <svg class="w-12 h-12 text-white" fill="currentColor" viewBox="0 0 20 20">
                    <path fill-rule="evenodd" d="M6 2a1 1 0 00-1 1v1H4a2 2 0 00-2 2v10a2 2 0 002 2h12a2 2 0 002-2V6a2 2 0 00-2-2h-1V3a1 1 0 10-2 0v1H7V3a1 1 0 00-1-1zm0 5a1 1 0 000 2h8a1 1 0 100-2H6z" clip-rule="evenodd"/>
                  </svg>
                  <div class="absolute top-2 right-2">
                    <span class="px-2 py-1 text-xs rounded-full <%= course.status === 'published' ? 'bg-green-100 text-green-800' : 'bg-yellow-100 text-yellow-800' %>">
                      <%= course.status %>
                    </span>
                  </div>
                </div>
                <div class="p-6">
                  <div class="flex items-center justify-between mb-2">
                    <h3 class="font-bold text-gray-800"><%= course.title %></h3>
                  </div>
                  <p class="text-gray-600 text-sm mb-4"><%= course.description || 'No description available' %></p>
                  <div class="space-y-2 mb-4">
                    <div class="flex items-center justify-between text-sm text-gray-600">
                      <span class="font-medium"><%= course.category_display_name || course.category_name || 'Uncategorized' %></span>
                      <span class="font-bold">$<%= course.price || 0 %></span>
                    </div>
                    <div class="flex items-center justify-between text-sm text-gray-600">
                      <span><%= course.difficulty_name || 'Unknown' %></span>
                      <span><%= course.enrollment_count || 0 %> students</span>
                    </div>
                  </div>
                  <div class="flex space-x-2">
                    <button onclick="openCourseDetail('<%= course.id %>')" class="flex-1 bg-purple-100 text-purple-600 px-4 py-2 rounded-lg hover:bg-purple-200 transition-colors text-sm">
                      View Details
                    </button>
                    <button onclick="editCourse('<%= course.id %>')" class="flex-1 border border-gray-300 text-gray-700 px-4 py-2 rounded-lg hover:bg-gray-50 transition-colors text-sm">
                      Edit
                    </button>
                    <button onclick="deleteCourse('<%= course.id %>', '<%= course.title %>')" class="flex-1 bg-red-100 text-red-600 px-4 py-2 rounded-lg hover:bg-red-200 transition-colors text-sm">
                      Delete
                    </button>
                  </div>
                </div>
              </div>
            <% }); %>
          <% } else { %>
            <!-- Show empty state -->
            <div class="col-span-full text-center py-12">
              <div class="bg-white rounded-2xl p-8 shadow-lg">
                <svg class="w-16 h-16 text-gray-400 mx-auto mb-4" fill="currentColor" viewBox="0 0 20 20">
                  <path fill-rule="evenodd" d="M6 2a1 1 0 00-1 1v1H4a2 2 0 00-2 2v10a2 2 0 002 2h12a2 2 0 002-2V6a2 2 0 00-2-2h-1V3a1 1 0 10-2 0v1H7V3a1 1 0 00-1-1zm0 5a1 1 0 000 2h8a1 1 0 100-2H6z" clip-rule="evenodd"/>
                </svg>
                <h3 class="text-lg font-semibold text-gray-800 mb-2">No Courses Yet</h3>
                <p class="text-gray-600 mb-4">You haven't created any courses yet. Start by creating your first course!</p>
                <a href="/instructor/courses/create" class="bg-gradient-to-r from-purple-600 to-pink-600 text-white px-6 py-2 rounded-lg hover:from-purple-700 hover:to-pink-700 transition-all">
                  Create Your First Course
                </a>
              </div>
            </div>
          <% } %>
        </div>
      </div>
    </div>

    <!-- Course Detail Modal -->
    <div
      id="courseDetailModal"
      class="fixed inset-0 bg-black bg-opacity-50 hidden z-50 flex items-center justify-center p-4"
    >
      <div
        class="bg-white rounded-2xl max-w-4xl w-full max-h-[90vh] overflow-y-auto"
      >
        <div class="p-6">
          <div class="flex items-center justify-between mb-6">
            <h2 id="modalCourseTitle" class="text-2xl font-bold text-gray-800">
              Course Title
            </h2>
            <button
              onclick="closeCourseDetail()"
              class="text-gray-500 hover:text-gray-700"
            >
              <svg
                class="w-6 h-6"
                fill="none"
                stroke="currentColor"
                viewBox="0 0 24 24"
              >
                <path
                  stroke-linecap="round"
                  stroke-linejoin="round"
                  stroke-width="2"
                  d="M6 18L18 6M6 6l12 12"
                />
              </svg>
            </button>
          </div>

          <div class="grid grid-cols-1 lg:grid-cols-3 gap-6">
            <!-- Course Info -->
            <div class="lg:col-span-2">
              <div class="space-y-6">
                <div>
                  <h3 class="font-semibold text-gray-800 mb-2">Description</h3>
                  <p id="modalCourseDescription" class="text-gray-600"></p>
                </div>

                <div class="grid grid-cols-2 gap-4">
                  <div>
                    <h3 class="font-semibold text-gray-800 mb-2">Category</h3>
                    <p id="modalCourseCategory" class="text-gray-600"></p>
                  </div>
                  <div>
                    <h3 class="font-semibold text-gray-800 mb-2">Price</h3>
                    <p id="modalCoursePrice" class="text-gray-600"></p>
                  </div>
                  <div>
                    <h3 class="font-semibold text-gray-800 mb-2">Difficulty</h3>
                    <p id="modalCourseDifficulty" class="text-gray-600"></p>
                  </div>
                  <div>
                    <h3 class="font-semibold text-gray-800 mb-2">Status</h3>
                    <p id="modalCourseStatus" class="text-gray-600"></p>
                  </div>
                </div>

                <div>
                  <h3 class="font-semibold text-gray-800 mb-2">
                    Learning Objectives
                  </h3>
                  <ul
                    id="modalCourseObjectives"
                    class="list-disc list-inside text-gray-600 space-y-1"
                  ></ul>
                </div>

                <div>
                  <h3 class="font-semibold text-gray-800 mb-2">
                    Course Lessons
                  </h3>
                  <div id="modalCourseLessons" class="space-y-2"></div>
                </div>
              </div>
            </div>

            <!-- Course Stats -->
            <div>
              <div class="bg-gray-50 rounded-lg p-4 mb-4">
                <h3 class="font-semibold text-gray-800 mb-4">
                  Course Statistics
                </h3>
                <div class="space-y-3">
                  <div class="flex justify-between">
                    <span class="text-gray-600">Enrolled Students</span>
                    <span id="modalEnrolledStudents" class="font-medium"
                      >0</span
                    >
                  </div>
                  <div class="flex justify-between">
                    <span class="text-gray-600">Completion Rate</span>
                    <span id="modalCompletionRate" class="font-medium">0%</span>
                  </div>
                  <div class="flex justify-between">
                    <span class="text-gray-600">Average Rating</span>
                    <span id="modalAverageRating" class="font-medium">0.0</span>
                  </div>
                  <div class="flex justify-between">
                    <span class="text-gray-600">Total Revenue</span>
                    <span id="modalTotalRevenue" class="font-medium">$0</span>
                  </div>
                </div>
              </div>

              <div class="space-y-3">
                <button
                  onclick="editCourse()"
                  class="w-full bg-blue-600 text-white px-4 py-2 rounded-lg hover:bg-blue-700 transition-colors"
                >
                  Edit Course
                </button>
                <button
                  onclick="duplicateCourse()"
                  class="w-full border border-gray-300 text-gray-700 px-4 py-2 rounded-lg hover:bg-gray-50 transition-colors"
                >
                  Duplicate Course
                </button>
                <button
                  onclick="deleteCourse()"
                  class="w-full bg-red-600 text-white px-4 py-2 rounded-lg hover:bg-red-700 transition-colors"
                >
                  Delete Course
                </button>
              </div>
            </div>
          </div>
        </div>
      </div>
    </div>

                   <script>
        // Course filtering functionality
        let currentFilter = 'all';
        let allCourses = [];

        // Initialize courses data from server-side rendering
        document.addEventListener('DOMContentLoaded', function() {
          // Get all course cards
          const courseCards = document.querySelectorAll('#coursesGrid > div');
          allCourses = Array.from(courseCards);
        });

                 function filterCourses(status) {
           currentFilter = status;
           
           // Update button styles
           document.querySelectorAll('.filter-btn').forEach(btn => {
             btn.classList.remove('bg-purple-100', 'text-purple-600', 'font-medium');
             btn.classList.add('text-gray-600', 'hover:bg-gray-100');
           });
           
           // Highlight active button
           const activeButton = document.getElementById(`filter-${status}`);
           activeButton.classList.remove('text-gray-600', 'hover:bg-gray-100');
           activeButton.classList.add('bg-purple-100', 'text-purple-600', 'font-medium');
           
           // Get all course cards (excluding any empty state divs)
           const courseCards = document.querySelectorAll('#coursesGrid > div:not(.col-span-full)');
           let visibleCount = 0;
           
           courseCards.forEach(card => {
             const statusBadge = card.querySelector('.px-2.py-1.text-xs.rounded-full');
             const courseStatus = statusBadge ? statusBadge.textContent.trim() : '';
             
             if (status === 'all' || courseStatus === status) {
               card.style.display = 'block';
               visibleCount++;
             } else {
               card.style.display = 'none';
             }
           });
           
           // Handle empty state
           const existingEmptyState = document.querySelector('#coursesGrid .col-span-full');
           
           if (visibleCount === 0 && status !== 'all') {
             // Show empty state for filtered results
             if (!existingEmptyState || !existingEmptyState.querySelector('.text-gray-400')) {
               const emptyStateHtml = `
                 <div class="col-span-full text-center py-12">
                   <div class="bg-white rounded-2xl p-8 shadow-lg">
                     <svg class="w-16 h-16 text-gray-400 mx-auto mb-4" fill="currentColor" viewBox="0 0 20 20">
                       <path fill-rule="evenodd" d="M6 2a1 1 0 00-1 1v1H4a2 2 0 00-2 2v10a2 2 0 002 2h12a2 2 0 002-2V6a2 2 0 00-2-2h-1V3a1 1 0 10-2 0v1H7V3a1 1 0 00-1-1zm0 5a1 1 0 000 2h8a1 1 0 100-2H6z" clip-rule="evenodd"/>
                     </svg>
                     <h3 class="text-lg font-semibold text-gray-800 mb-2">No ${status.charAt(0).toUpperCase() + status.slice(1)} Courses</h3>
                     <p class="text-gray-600 mb-4">You don't have any ${status} courses yet.</p>
                     <button onclick="filterCourses('all')" class="bg-purple-600 text-white px-6 py-2 rounded-lg hover:bg-purple-700 transition-all">
                       View All Courses
                     </button>
                   </div>
                 </div>
               `;
               document.getElementById('coursesGrid').insertAdjacentHTML('beforeend', emptyStateHtml);
             }
           } else {
             // Remove empty state if it exists
             if (existingEmptyState) {
               existingEmptyState.remove();
             }
           }
         }

        // Course detail modal functions
        function openCourseDetail(courseId) {
          // Find the course data from the server-side rendered courses
          const courseCard = document.querySelector(`[onclick="openCourseDetail('${courseId}')"]`).closest('.bg-white.rounded-2xl');
          
          if (courseCard) {
            // Extract course data from the card
            const title = courseCard.querySelector('h3').textContent;
            const description = courseCard.querySelector('p').textContent;
            const category = courseCard.querySelector('.space-y-2 .flex:first-child span:first-child').textContent;
            const price = courseCard.querySelector('.space-y-2 .flex:first-child span:last-child').textContent;
            const difficulty = courseCard.querySelector('.space-y-2 .flex:last-child span:first-child').textContent;
            const students = courseCard.querySelector('.space-y-2 .flex:last-child span:last-child').textContent;
            const status = courseCard.querySelector('.px-2.py-1.text-xs.rounded-full').textContent;
            
            // Populate modal with course data
            document.getElementById('modalCourseTitle').textContent = title;
            document.getElementById('modalCourseDescription').textContent = description;
            document.getElementById('modalCourseCategory').textContent = category;
            document.getElementById('modalCoursePrice').textContent = price;
            document.getElementById('modalCourseDifficulty').textContent = difficulty;
            document.getElementById('modalCourseStatus').textContent = status;
            
            // Update enrolled students count
            const studentCount = students.replace(' students', '');
            document.getElementById('modalEnrolledStudents').textContent = studentCount;
            
            // Store course ID for edit/delete operations
            document.getElementById('courseDetailModal').setAttribute('data-course-id', courseId);
            
            // Show modal
            document.getElementById('courseDetailModal').classList.remove('hidden');
            document.body.style.overflow = 'hidden';
          } else {
            alert('Course not found');
          }
        }

       function closeCourseDetail() {
         document.getElementById("courseDetailModal").classList.add("hidden");
         document.body.style.overflow = "auto";
       }

       // Course management functions
       function editCourse(courseId) {
         // If courseId is not provided, get it from the modal
         if (!courseId) {
           courseId = document.getElementById('courseDetailModal').getAttribute('data-course-id');
         }
         window.location.href = `/instructor/courses/${courseId}/edit`;
       }

       function duplicateCourse() {
         alert("Course duplicated successfully! You can now edit the copy.");
         closeCourseDetail();
       }

       function deleteCourse(courseId, courseTitle) {
         // If courseId is not provided, get it from the modal
         if (!courseId) {
           courseId = document.getElementById('courseDetailModal').getAttribute('data-course-id');
           courseTitle = document.getElementById('modalCourseTitle').textContent;
         }
         
         if (confirm(`Are you sure you want to delete the course "${courseTitle}"? This action cannot be undone.`)) {
           fetch(`/instructor/courses/${courseId}`, {
             method: 'DELETE',
             headers: {
               'Content-Type': 'application/json'
             }
           })
           .then(response => response.json())
           .then(data => {
             if (data.success) {
               alert('Course deleted successfully!');
               // Reload the page to refresh the course list
               window.location.reload();
             } else {
               alert('Error deleting course: ' + data.message);
             }
           })
           .catch(error => {
             console.error('Error deleting course:', error);
             alert('Error deleting course. Please try again.');
           });
         }
       }

       // Close modals when clicking outside
       document
         .getElementById("courseDetailModal")
         .addEventListener("click", function (e) {
           if (e.target === this) {
             closeCourseDetail();
           }
         });

       // Course search functionality
       document.addEventListener('DOMContentLoaded', function() {
         const searchInput = document.getElementById('coursesSearchInput');
         const courseCards = document.querySelectorAll('.course-card');

         function searchCourses() {
           const searchTerm = searchInput.value.toLowerCase();
           let visibleCount = 0;

           courseCards.forEach(card => {
             const title = card.dataset.title;
             const category = card.dataset.category;
             const difficulty = card.dataset.difficulty;
             const status = card.dataset.status;
             const description = card.dataset.description;
             
             const matchesSearch = title.includes(searchTerm) || 
                                 category.includes(searchTerm) || 
                                 difficulty.includes(searchTerm) || 
                                 status.includes(searchTerm) ||
                                 description.includes(searchTerm);
             
             if (matchesSearch || searchTerm === '') {
               card.style.display = 'block';
               visibleCount++;
             } else {
               card.style.display = 'none';
             }
           });

           // Show/hide empty state based on search results
           const existingEmptyState = document.querySelector('#coursesGrid .col-span-full');
           
           if (visibleCount === 0 && searchTerm !== '') {
             // Show empty state for search results
             if (!existingEmptyState || !existingEmptyState.querySelector('.text-gray-400')) {
               const emptyStateHtml = `
                 <div class="col-span-full text-center py-12">
                   <div class="bg-white rounded-2xl p-8 shadow-lg">
                     <svg class="w-16 h-16 text-gray-400 mx-auto mb-4" fill="currentColor" viewBox="0 0 20 20">
                       <path fill-rule="evenodd" d="M6 2a1 1 0 00-1 1v1H4a2 2 0 00-2 2v10a2 2 0 002 2h12a2 2 0 002-2V6a2 2 0 00-2-2h-1V3a1 1 0 10-2 0v1H7V3a1 1 0 00-1-1zm0 5a1 1 0 000 2h8a1 1 0 100-2H6z" clip-rule="evenodd"/>
                     </svg>
                     <h3 class="text-lg font-semibold text-gray-800 mb-2">No Courses Found</h3>
                     <p class="text-gray-600 mb-4">No courses match your search criteria.</p>
                     <button onclick="clearCoursesSearch()" class="bg-purple-600 text-white px-6 py-2 rounded-lg hover:bg-purple-700 transition-all">
                       Clear Search
                     </button>
                   </div>
                 </div>
               `;
               document.getElementById('coursesGrid').insertAdjacentHTML('beforeend', emptyStateHtml);
             }
           } else if (visibleCount > 0) {
             // Remove empty state if it exists
             if (existingEmptyState) {
               existingEmptyState.remove();
             }
           }
         }

         function clearCoursesSearch() {
           searchInput.value = '';
           searchCourses();
         }

         // Add clear search function to global scope
         window.clearCoursesSearch = clearCoursesSearch;

         searchInput.addEventListener('input', searchCourses);
       });
     </script>
