
      <!-- Edit Course Form -->
      <div class="max-w-4xl mx-auto">
        <div class="flex items-center justify-between mb-6">
          <h2 class="text-2xl font-bold text-gray-800">Edit Course</h2>
          <a href="/instructor/courses" class="text-purple-600 hover:text-purple-700 flex items-center space-x-2">
            <svg class="w-4 h-4" fill="none" stroke="currentColor" viewBox="0 0 24 24">
              <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M10 19l-7-7m0 0l7-7m-7 7h18"/>
            </svg>
            <span>Back to Courses</span>
          </a>
        </div>

        <% if (course) { %>
          <form action="/instructor/courses/<%= course.id %>/edit" method="POST" class="bg-white rounded-2xl shadow-lg p-8">
            <!-- Course Title -->
            <div class="mb-6">
              <label for="courseTitle" class="block text-sm font-medium text-gray-700 mb-2">Course Title *</label>
              <input
                type="text"
                id="courseTitle"
                name="courseTitle"
                value="<%= course.title %>"
                required
                class="w-full px-4 py-3 border border-gray-300 rounded-lg focus:ring-2 focus:ring-purple-500 focus:border-transparent"
                placeholder="Enter course title"
              />
            </div>

            <!-- Category -->
            <div class="mb-6">
              <label for="courseCategory" class="block text-sm font-medium text-gray-700 mb-2">Category *</label>
              <select
                id="courseCategory"
                name="courseCategory"
                required
                class="w-full px-4 py-3 border border-gray-300 rounded-lg focus:ring-2 focus:ring-purple-500 focus:border-transparent"
              >
                <option value="">Select a category</option>
                <% categories.forEach(category => { %>
                  <option value="<%= category.id %>" <%= course.category_id == category.id ? 'selected' : '' %>>
                    <%= category.name %>
                  </option>
                <% }); %>
              </select>
            </div>

            <!-- Difficulty Level -->
            <div class="mb-6">
              <label for="courseDifficulty" class="block text-sm font-medium text-gray-700 mb-2">Difficulty Level *</label>
              <select
                id="courseDifficulty"
                name="courseDifficulty"
                required
                class="w-full px-4 py-3 border border-gray-300 rounded-lg focus:ring-2 focus:ring-purple-500 focus:border-transparent"
              >
                <option value="">Select difficulty level</option>
                <% difficultyLevels.forEach(difficulty => { %>
                  <option value="<%= difficulty.id %>" <%= course.difficulty_id == difficulty.id ? 'selected' : '' %>>
                    <%= difficulty.name %>
                  </option>
                <% }); %>
              </select>
            </div>

            <!-- Price -->
            <div class="mb-6">
              <label for="coursePrice" class="block text-sm font-medium text-gray-700 mb-2">Price ($)</label>
              <input
                type="number"
                id="coursePrice"
                name="coursePrice"
                value="<%= course.price || 0 %>"
                step="0.01"
                min="0"
                class="w-full px-4 py-3 border border-gray-300 rounded-lg focus:ring-2 focus:ring-purple-500 focus:border-transparent"
                placeholder="0.00"
              />
            </div>

            <!-- Status -->
            <div class="mb-6">
              <label for="status" class="block text-sm font-medium text-gray-700 mb-2">Status</label>
              <select
                id="status"
                name="status"
                class="w-full px-4 py-3 border border-gray-300 rounded-lg focus:ring-2 focus:ring-purple-500 focus:border-transparent"
              >
                <option value="draft" <%= course.status === 'draft' ? 'selected' : '' %>>Draft</option>
                <option value="published" <%= course.status === 'published' ? 'selected' : '' %>>Published</option>
              </select>
            </div>

            <!-- Description -->
            <div class="mb-6">
              <label for="courseDescription" class="block text-sm font-medium text-gray-700 mb-2">Description</label>
              <textarea
                id="courseDescription"
                name="courseDescription"
                rows="6"
                class="w-full px-4 py-3 border border-gray-300 rounded-lg focus:ring-2 focus:ring-purple-500 focus:border-transparent"
                placeholder="Describe your course..."
              ><%= course.description || '' %></textarea>
            </div>

            <!-- Course Objectives -->
            <div class="mb-6">
              <label for="courseObjectives" class="block text-sm font-medium text-gray-700 mb-2">Learning Objectives</label>
              <textarea
                id="courseObjectives"
                name="courseObjectives"
                rows="4"
                class="w-full px-4 py-3 border border-gray-300 rounded-lg focus:ring-2 focus:ring-purple-500 focus:border-transparent"
                placeholder="What will students learn from this course? (Enter each objective on a new line)"
              ><%= typeof objectives !== 'undefined' && objectives && objectives.length > 0 ? objectives.map(obj => obj.objective).join('\n') : '' %></textarea>
            </div>

            <!-- Course Prerequisites -->
            <div class="mb-6">
              <label for="coursePrerequisites" class="block text-sm font-medium text-gray-700 mb-2">Prerequisites</label>
              <textarea
                id="coursePrerequisites"
                name="coursePrerequisites"
                rows="3"
                class="w-full px-4 py-3 border border-gray-300 rounded-lg focus:ring-2 focus:ring-purple-500 focus:border-transparent"
                placeholder="What should students know before taking this course? (Enter each prerequisite on a new line)"
              ><%= typeof prerequisites !== 'undefined' && prerequisites && prerequisites.length > 0 ? prerequisites.map(prereq => prereq.prerequisite).join('\n') : '' %></textarea>
            </div>

            <!-- Course Lessons -->
            <div class="mb-6">
              <div class="mb-4">
                <h3 class="text-lg font-bold text-gray-800">Course Lessons</h3>
              </div>
              <div id="lessonsContainer" class="space-y-4">
                <!-- Lessons will be added dynamically -->
              </div>
              <div class="mt-4">
                <button
                  type="button"
                  onclick="addLesson()"
                  class="w-full border-2 border-dashed border-gray-300 rounded-lg p-6 text-gray-600 hover:border-purple-500 hover:text-purple-600 hover:bg-purple-50 transition-all duration-200 flex flex-col items-center justify-center space-y-2"
                >
                  <svg
                    class="w-8 h-8"
                    fill="none"
                    stroke="currentColor"
                    viewBox="0 0 24 24"
                  >
                    <path
                      stroke-linecap="round"
                      stroke-linejoin="round"
                      stroke-width="2"
                      d="M12 6v6m0 0v6m0-6h6m-6 0H6"
                    />
                  </svg>
                  <span class="font-medium">Add New Lesson</span>
                  <span class="text-sm opacity-75">Click to add another lesson to your course</span>
                </button>
              </div>
            </div>

            <!-- Action Buttons -->
            <div class="flex space-x-4">
              <button
                type="submit"
                class="flex-1 bg-gradient-to-r from-purple-600 to-pink-600 text-white px-6 py-3 rounded-lg hover:from-purple-700 hover:to-pink-700 transition-all font-medium"
              >
                Update Course
              </button>
              <a
                href="/instructor/courses"
                class="flex-1 border border-gray-300 text-gray-700 px-6 py-3 rounded-lg hover:bg-gray-50 transition-all font-medium text-center"
              >
                Cancel
              </a>
            </div>
          </form>
        <% } else { %>
          <!-- Course not found -->
          <div class="bg-white rounded-2xl shadow-lg p-8 text-center">
            <svg class="w-16 h-16 text-gray-400 mx-auto mb-4" fill="currentColor" viewBox="0 0 20 20">
              <path fill-rule="evenodd" d="M18 10a8 8 0 11-16 0 8 8 0 0116 0zm-7 4a1 1 0 11-2 0 1 1 0 012 0zm-1-9a1 1 0 00-1 1v4a1 1 0 102 0V6a1 1 0 00-1-1z" clip-rule="evenodd"/>
            </svg>
            <h3 class="text-lg font-semibold text-gray-800 mb-2">Course Not Found</h3>
            <p class="text-gray-600 mb-4">The course you're looking for doesn't exist or you don't have permission to edit it.</p>
            <a href="/instructor/courses" class="bg-purple-600 text-white px-6 py-2 rounded-lg hover:bg-purple-700 transition-all">
              Back to Courses
            </a>
          </div>
        <% } %>
      </div>

      <script id="lessonsData" type="application/json"><%- JSON.stringify(typeof lessons !== 'undefined' ? lessons : []) %></script>


      <script>
        let lessonCounter = 0;
        let existingLessons = JSON.parse(document.getElementById('lessonsData').textContent);

        // Load existing lessons when page loads
        document.addEventListener('DOMContentLoaded', function() {
          loadExistingLessons();
        });

        function loadExistingLessons() {
          const container = document.getElementById('lessonsContainer');
          container.innerHTML = '';

          existingLessons.forEach((lesson, index) => {
            addLessonToContainer(lesson, index);
          });

          if (existingLessons.length === 0) {
            addLesson();
          }
          
          updateLessonNumbers();
        }

        function addLesson() {
          lessonCounter++;
          const lessonsContainer = document.getElementById("lessonsContainer");
          const lessonDiv = document.createElement("div");
          lessonDiv.className = "border border-gray-200 rounded-lg p-4";
          const isFirstLesson = lessonCounter === 1;
          lessonDiv.innerHTML = `
            <div class="flex items-center justify-between mb-4">
                <h4 class="font-medium text-gray-800">Lesson ${lessonCounter}</h4>
                <button type="button" onclick="removeLesson(this)" class="text-red-600 hover:text-red-700 remove-lesson-btn" style="display: ${isFirstLesson ? 'none' : 'block'};">
                    <svg class="w-4 h-4" fill="currentColor" viewBox="0 0 20 20">
                        <path fill-rule="evenodd" d="M4.293 4.293a1 1 0 011.414 0L10 8.586l4.293-4.293a1 1 0 111.414 1.414L11.414 10l4.293 4.293a1 1 0 01-1.414 1.414L10 11.414l-4.293 4.293a1 1 0 01-1.414-1.414L8.586 10 4.293 5.707a1 1 0 010-1.414z" clip-rule="evenodd"/>
                    </svg>
                </button>
            </div>
            <div class="grid grid-cols-1 md:grid-cols-2 gap-4">
                <div>
                    <label class="block text-sm font-medium text-gray-700 mb-2">Lesson Title *</label>
                    <input type="text" name="lessonTitles[]" required class="w-full px-4 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-purple-500 focus:border-transparent" placeholder="Enter lesson title">
                </div>
                <div>
                    <label class="block text-sm font-medium text-gray-700 mb-2">Duration (minutes)</label>
                    <input type="number" name="lessonDurations[]" min="1" class="w-full px-4 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-purple-500 focus:border-transparent" placeholder="15">
                </div>
            </div>
            <div class="mt-4">
                <label class="block text-sm font-medium text-gray-700 mb-2">Lesson Description</label>
                <textarea name="lessonDescriptions[]" rows="2" class="w-full px-4 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-purple-500 focus:border-transparent" placeholder="Brief description of this lesson"></textarea>
            </div>
            <div class="mt-4">
                <label class="block text-sm font-medium text-gray-700 mb-2">Video URL</label>
                <input type="url" name="lessonVideoUrls[]" class="w-full px-4 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-purple-500 focus:border-transparent" placeholder="https://www.youtube.com/watch?v=... or https://vimeo.com/...">
                <p class="text-xs text-gray-500 mt-1">Supported: YouTube, Vimeo, or direct video file URLs</p>
            </div>
        `;
          lessonsContainer.appendChild(lessonDiv);
          updateLessonNumbers();
        }

        function addLessonToContainer(lesson, index) {
          lessonCounter++;
          const lessonsContainer = document.getElementById("lessonsContainer");
          const lessonDiv = document.createElement("div");
          lessonDiv.className = "border border-gray-200 rounded-lg p-4";
          const isFirstLesson = index === 0;
          lessonDiv.innerHTML = `
            <div class="flex items-center justify-between mb-4">
                <h4 class="font-medium text-gray-800">Lesson ${lessonCounter}</h4>
                <button type="button" onclick="removeLesson(this)" class="text-red-600 hover:text-red-700 remove-lesson-btn" style="display: ${isFirstLesson ? 'none' : 'block'};">
                    <svg class="w-4 h-4" fill="currentColor" viewBox="0 0 20 20">
                        <path fill-rule="evenodd" d="M4.293 4.293a1 1 0 011.414 0L10 8.586l4.293-4.293a1 1 0 111.414 1.414L11.414 10l4.293 4.293a1 1 0 01-1.414 1.414L10 11.414l-4.293 4.293a1 1 0 01-1.414-1.414L8.586 10 4.293 5.707a1 1 0 010-1.414z" clip-rule="evenodd"/>
                    </svg>
                </button>
            </div>
            <div class="grid grid-cols-1 md:grid-cols-2 gap-4">
                <div>
                    <label class="block text-sm font-medium text-gray-700 mb-2">Lesson Title *</label>
                    <input type="text" name="lessonTitles[]" value="${lesson.title || ''}" required class="w-full px-4 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-purple-500 focus:border-transparent" placeholder="Enter lesson title">
                </div>
                <div>
                    <label class="block text-sm font-medium text-gray-700 mb-2">Duration (minutes)</label>
                    <input type="number" name="lessonDurations[]" value="${lesson.duration_mins || ''}" min="1" class="w-full px-4 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-purple-500 focus:border-transparent" placeholder="15">
                </div>
            </div>
            <div class="mt-4">
                <label class="block text-sm font-medium text-gray-700 mb-2">Lesson Description</label>
                <textarea name="lessonDescriptions[]" rows="2" class="w-full px-4 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-purple-500 focus:border-transparent" placeholder="Brief description of this lesson">${lesson.description || ''}</textarea>
            </div>
            <div class="mt-4">
                <label class="block text-sm font-medium text-gray-700 mb-2">Video URL</label>
                <input type="url" name="lessonVideoUrls[]" value="${lesson.video_url || ''}" class="w-full px-4 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-purple-500 focus:border-transparent" placeholder="https://www.youtube.com/watch?v=... or https://vimeo.com/...">
                <p class="text-xs text-gray-500 mt-1">Supported: YouTube, Vimeo, or direct video file URLs</p>
            </div>
            ${lesson.id ? `<input type="hidden" name="lessonIds[]" value="${lesson.id}">` : ''}
        `;
          lessonsContainer.appendChild(lessonDiv);
        }

        function removeLesson(button) {
          button.closest(".border").remove();
          updateDeleteButtonVisibility();
          updateLessonNumbers();
        }

        function updateDeleteButtonVisibility() {
          const lessonDivs = document.querySelectorAll('#lessonsContainer .border');
          lessonDivs.forEach((lessonDiv, index) => {
            const deleteBtn = lessonDiv.querySelector('.remove-lesson-btn');
            if (deleteBtn) {
              deleteBtn.style.display = index === 0 ? 'none' : 'block';
            }
          });
        }

        function updateLessonNumbers() {
          // Lesson numbers are now handled automatically in the headers
          // No need to update input fields since they don't exist
        }

       </script>
