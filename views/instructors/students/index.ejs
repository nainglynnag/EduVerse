<!-- Students Management Content -->
<div id="studentsContent">
  <!-- Page Header -->
  <div class="flex items-center justify-between mb-6">
    <div>
      <h2 class="text-2xl font-bold text-gray-800">My Students</h2>
      <p class="text-gray-600 mt-1">Manage and view all students enrolled in your courses</p>
    </div>
  </div>

  <!-- Stats Cards -->
  <div class="grid grid-cols-1 md:grid-cols-3 gap-6 mb-8">
    <div class="bg-white rounded-2xl p-6 shadow-lg hover:shadow-xl transition-shadow">
      <div class="flex items-center justify-between">
        <div>
          <p class="text-gray-600 text-sm">Total Students</p>
          <p class="text-3xl font-bold text-purple-600"><%= students ? students.length : 0 %></p>
        </div>
        <div class="bg-purple-100 p-3 rounded-full">
          <svg class="w-6 h-6 text-purple-600" fill="currentColor" viewBox="0 0 20 20">
            <path d="M13 6a3 3 0 11-6 0 3 3 0 016 0zM18 8a2 2 0 11-4 0 2 2 0 014 0zM14 15a4 4 0 00-8 0v3h8v-3z"/>
          </svg>
        </div>
      </div>
    </div>

    <div class="bg-white rounded-2xl p-6 shadow-lg hover:shadow-xl transition-shadow">
      <div class="flex items-center justify-between">
        <div>
          <p class="text-gray-600 text-sm">Total Enrollments</p>
          <p class="text-3xl font-bold text-purple-600"><%= totalEnrollments || 0 %></p>
        </div>
        <div class="bg-purple-100 p-3 rounded-full">
          <svg class="w-6 h-6 text-purple-600" fill="currentColor" viewBox="0 0 20 20">
            <path d="M9 12l2 2 4-4m6 2a9 9 0 11-18 0 9 9 0 0118 0z"/>
          </svg>
        </div>
      </div>
    </div>

    <div class="bg-white rounded-2xl p-6 shadow-lg hover:shadow-xl transition-shadow">
      <div class="flex items-center justify-between">
        <div>
          <p class="text-gray-600 text-sm">Avg. Courses/Student</p>
          <p class="text-3xl font-bold text-purple-600"><%= students && students.length > 0 ? (totalEnrollments / students.length).toFixed(1) : 0 %></p>
        </div>
        <div class="bg-purple-100 p-3 rounded-full">
          <svg class="w-6 h-6 text-purple-600" fill="currentColor" viewBox="0 0 20 20">
            <path fill-rule="evenodd" d="M6 2a1 1 0 00-1 1v1H4a2 2 0 00-2 2v10a2 2 0 002 2h12a2 2 0 002-2V6a2 2 0 00-2-2h-1V3a1 1 0 10-2 0v1H7V3a1 1 0 00-1-1zm0 5a1 1 0 000 2h8a1 1 0 100-2H6z" clip-rule="evenodd"/>
          </svg>
        </div>
      </div>
    </div>
  </div>

  <!-- Filters and Search -->
  <div class="bg-white rounded-2xl p-6 shadow-lg mb-8">
    <div class="flex flex-col md:flex-row gap-4 items-center">
      <div class="flex-1">
        <input 
          type="text" 
          id="searchInput"
          placeholder="Search students by name or email..." 
          class="w-full px-4 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-purple-500 focus:border-transparent"
        >
      </div>
      <div class="flex gap-4">
        <select id="courseFilter" class="px-4 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-purple-500 focus:border-transparent">
          <option value="">All Courses</option>
          <% if (courses && courses.length > 0) { %>
            <% courses.forEach(course => { %>
              <option value="<%= course.title %>"><%= course.title %></option>
            <% }); %>
          <% } %>
        </select>
        <select id="sortFilter" class="px-4 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-purple-500 focus:border-transparent">
          <option value="name">Sort by Name</option>
          <option value="courses">Sort by Courses</option>
          <option value="joined">Sort by Join Date</option>
        </select>
      </div>
    </div>
  </div>

  <!-- Students List -->
  <div class="bg-white rounded-2xl shadow-lg overflow-hidden">
    <div class="p-6 border-b border-gray-200">
      <h3 class="text-lg font-semibold text-gray-800">Student List</h3>
    </div>

    <div id="studentsList" class="divide-y divide-gray-200">
      <% if (students && students.length > 0) { %>
        <% students.forEach(student => { %>
          <div class="p-6 hover:bg-gray-50 transition-colors student-card" 
               data-name="<%= student.name.toLowerCase() %>" 
               data-email="<%= student.email.toLowerCase() %>"
               data-courses="<%= student.enrolled_courses.toLowerCase() %>">
            <div class="flex items-center justify-between">
              <div class="flex items-center space-x-4">
                <div class="w-12 h-12 bg-gradient-to-r from-purple-500 to-pink-500 rounded-full flex items-center justify-center">
                  <span class="text-white font-semibold text-lg"><%= student.name.charAt(0).toUpperCase() %></span>
                </div>
                <div>
                  <h4 class="font-semibold text-gray-800 text-lg"><%= student.name %></h4>
                  <p class="text-gray-600"><%= student.email %></p>
                  <p class="text-sm text-gray-500">Joined <%= new Date(student.joined_date).toLocaleDateString() %></p>
                </div>
              </div>
              
              <div class="text-right">
                                 <div class="mb-2">
                   <span class="inline-flex items-center px-3 py-1 rounded-full text-sm font-medium bg-purple-100 text-purple-800">
                     <%= student.courses_enrolled %> course<%= student.courses_enrolled !== 1 ? 's' : '' %>
                   </span>
                 </div>
                <p class="text-sm text-gray-600 max-w-xs truncate" title="<%= student.enrolled_courses %>">
                  <%= student.enrolled_courses %>
                </p>
              </div>
            </div>
            
            <!-- Course Details (Expandable) -->
            <div class="mt-4 pt-4 border-t border-gray-100">
              <div class="flex items-center justify-between">
                <h5 class="font-medium text-gray-700">Enrolled Courses:</h5>
                <button onclick="toggleCourseDetails(this)" class="text-purple-600 hover:text-purple-700 text-sm font-medium">
                  Show Details
                </button>
              </div>
              <div class="course-details hidden mt-3">
                <div class="grid grid-cols-1 md:grid-cols-2 gap-3">
                  <% const courseList = student.enrolled_courses.split(', '); %>
                  <% courseList.forEach(course => { %>
                                         <div class="flex items-center space-x-2 p-2 bg-purple-50 rounded-lg">
                       <svg class="w-4 h-4 text-purple-600" fill="currentColor" viewBox="0 0 20 20">
                         <path fill-rule="evenodd" d="M6 2a1 1 0 00-1 1v1H4a2 2 0 00-2 2v10a2 2 0 002 2h12a2 2 0 002-2V6a2 2 0 00-2-2h-1V3a1 1 0 10-2 0v1H7V3a1 1 0 00-1-1zm0 5a1 1 0 000 2h8a1 1 0 100-2H6z" clip-rule="evenodd"/>
                       </svg>
                       <span class="text-sm text-gray-700"><%= course %></span>
                     </div>
                  <% }); %>
                </div>
              </div>
            </div>
          </div>
        <% }); %>
      <% } else { %>
        <!-- Empty State -->
        <div class="text-center py-12">
          <svg class="w-16 h-16 text-gray-400 mx-auto mb-4" fill="currentColor" viewBox="0 0 20 20">
            <path d="M13 6a3 3 0 11-6 0 3 3 0 016 0zM18 8a2 2 0 11-4 0 2 2 0 014 0zM14 15a4 4 0 00-8 0v3h8v-3z"/>
          </svg>
          <h3 class="text-lg font-semibold text-gray-800 mb-2">No Students Yet</h3>
          <p class="text-gray-600 mb-4">Students will appear here once they enroll in your courses.</p>
          <a href="/instructor/courses" class="bg-gradient-to-r from-purple-600 to-pink-600 text-white px-6 py-2 rounded-lg hover:from-purple-700 hover:to-pink-700 transition-all">
            View My Courses
          </a>
        </div>
      <% } %>
    </div>
  </div>
</div>

<script>
  // Search and filter functionality
  document.addEventListener('DOMContentLoaded', function() {
    const searchInput = document.getElementById('searchInput');
    const courseFilter = document.getElementById('courseFilter');
    const sortFilter = document.getElementById('sortFilter');
    const studentCards = document.querySelectorAll('.student-card');

    function filterStudents() {
      const searchTerm = searchInput.value.toLowerCase();
      const selectedCourse = courseFilter.value.toLowerCase();

      studentCards.forEach(card => {
        const name = card.dataset.name;
        const email = card.dataset.email;
        const courses = card.dataset.courses;
        
        const matchesSearch = name.includes(searchTerm) || email.includes(searchTerm);
        const matchesCourse = !selectedCourse || courses.includes(selectedCourse);
        
        if (matchesSearch && matchesCourse) {
          card.style.display = 'block';
        } else {
          card.style.display = 'none';
        }
      });
    }

    function sortStudents() {
      const sortBy = sortFilter.value;
      const studentsList = document.getElementById('studentsList');
      const cards = Array.from(studentCards);

      cards.sort((a, b) => {
        switch(sortBy) {
          case 'name':
            return a.dataset.name.localeCompare(b.dataset.name);
          case 'courses':
            const aCourses = parseInt(a.querySelector('.bg-purple-100').textContent);
            const bCourses = parseInt(b.querySelector('.bg-purple-100').textContent);
            return bCourses - aCourses;
          case 'joined':
            // This would need actual date comparison in a real implementation
            return 0;
          default:
            return 0;
        }
      });

      cards.forEach(card => studentsList.appendChild(card));
    }

    searchInput.addEventListener('input', filterStudents);
    courseFilter.addEventListener('change', filterStudents);
    sortFilter.addEventListener('change', sortStudents);
  });

  // Toggle course details
  function toggleCourseDetails(button) {
    const details = button.parentElement.nextElementSibling;
    const isHidden = details.classList.contains('hidden');
    
    if (isHidden) {
      details.classList.remove('hidden');
      button.textContent = 'Hide Details';
    } else {
      details.classList.add('hidden');
      button.textContent = 'Show Details';
    }
  }
</script>
